{"version":3,"sources":["assets\\script\\mainScene\\MainScene.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { localStorageKey, userData } from \"../data/UserData\";\r\nimport SpineManager from \"../manager/SpineManager\";\r\nimport EventDefine from \"../util/EventDefine\";\r\nimport { FirebaseKey, FirebaseReport } from \"../util/FirebaseReport\";\r\nimport ListView from \"../util/ListView\";\r\nimport SkinShopItemData from \"../util/SkinShopItemData\";\r\nimport Utils from \"../util/Utils\";\r\nimport SdkManager from \"../util/SdkManager\";\r\nimport WeaponShop from \"./WeaponShop\";\r\nimport SignInView from \"./SignInView\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class MainScene extends cc.Component {\r\n\r\n    @property(cc.Node)\r\n    public mainRoot: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    public SkinShopRoot: cc.Node = null;\r\n\r\n    @property(cc.Label)\r\n    public num_gold_main: cc.Label = null;\r\n\r\n    @property(sp.Skeleton)\r\n    public roleModel:sp.Skeleton = null;\r\n\r\n\r\n    private static _instance:MainScene = null;\r\n\r\n\r\n    private shop_num_gold:cc.Label;\r\n    \r\n    private listViewScript: ListView;\r\n\r\n    private shopDatas: SkinShopItemData[] = null;\r\n\r\n    private showModelOfShop:sp.Skeleton;\r\n    /**需要解锁的皮肤序号 */\r\n    private unlockIndex: number;\r\n\r\n    //@property(dragonBones.ArmatureDisplay)\r\n    //public huolong: dragonBones.ArmatureDisplay = null;\r\n\r\n    //@property(dragonBones.ArmatureDisplay)\r\n    //public lvlong: dragonBones.ArmatureDisplay = null;\r\n\r\n    //@property(sp.Skeleton)\r\n    //public zhu: sp.Skeleton = null;\r\n\r\n\r\n    @property(sp.Skeleton)\r\n    public weapon: sp.Skeleton = null;\r\n\r\n    //@property(sp.Skeleton)\r\n    //public zhu1: sp.Skeleton = null;\r\n\r\n\r\n\r\n    onLoad () {\r\n        MainScene._instance = this;\r\n\r\n        if (cc.sys.platform == cc.sys.ANDROID) {\r\n            jsb.reflection.callStaticMethod(\"org/cocos2dx/javascript/AppOpenAdManager\", \"JsCall_InitAdAvailable\", \"()V\");\r\n            FirebaseReport.reportAdjustParam(\"1x5fu1\");                \r\n        }\r\n\r\n\r\n        this.initListener();\r\n        this.showMainView();\r\n\r\n        this.testSpine();\r\n\r\n    }\r\n\r\n    /**初始化监听 */\r\n    private initListener():void {\r\n        cc.find(\"Canvas\").on(EventDefine.GOLD_CHANGE, () => {\r\n            let goldNum:number = userData.getData(localStorageKey.GOLD);\r\n            this.num_gold_main.string = goldNum + \"\";\r\n            if (this.shop_num_gold) {\r\n                this.shop_num_gold.string = goldNum + \"\";\r\n            }\r\n        });\r\n\r\n        cc.find(\"Canvas\").on(EventDefine.USING_SKIN_CHANGE, () => { \r\n\r\n        });\r\n\r\n        var btnSkin = cc.find(\"MainRoot/btn_skins\", this.node);\r\n        btnSkin.on(\"click\", this.onBtnSkin, this);\r\n\r\n        var btnWeapon = cc.find(\"MainRoot/btn_weapon\", this.node);\r\n        btnWeapon.on(\"click\", this.onBtnWeapon, this);\r\n\r\n        var btnSign = cc.find(\"MainRoot/btn_sign\", this.node);\r\n        btnSign.on(\"click\", this.onBtnSign, this);\r\n\r\n        var dataNum = userData.getData(localStorageKey.SIGNIN_NUM);\r\n        btnSign.active = dataNum < 7;\r\n\r\n    }\r\n\r\n\r\n    /**展示主界面 */\r\n    private showMainView():void {\r\n        this.num_gold_main.string = userData.getData(localStorageKey.GOLD);\r\n        this.mainRoot.active = true;\r\n        this.SkinShopRoot.active = false;\r\n\r\n        let usingIndex = userData.getData(localStorageKey.USING_SKIN_INDEX) + 1;\r\n        let skinDatas = userData.getData(localStorageKey.SHOP_DATAS) as SkinShopItemData[];\r\n\r\n        let weaponIdx = userData.getData(localStorageKey.USING_WEAPON_IDX) + 1;\r\n\r\n        //SpineManager.getInstance().loadSpine(this.roleModel, \"spine/players/\" + skinDatas[usingIndex].resName + \"\" + weaponIdx, true, \"default\", \"daiji3\");\r\n        SpineManager.getInstance().loadSkinSpine(this.roleModel, this.weapon, true, usingIndex, weaponIdx, \"daiji3\")\r\n    }\r\n\r\n    private onBtnStart():void {\r\n        FirebaseReport.reportInformation(FirebaseKey.shouye_start);\r\n        FirebaseReport.reportAdjustParam(\"oq0hy2\");\r\n        cc.director.loadScene('GameScene');//进入游戏场景\r\n\r\n        //userData.setData(localStorageKey.GOLD, 6000);\r\n    }\r\n\r\n\r\n    private onBtnSkin():void {\r\n        FirebaseReport.reportInformation(FirebaseKey.shouye_skin);\r\n        FirebaseReport.reportAdjustParam(\"bm6s8g\");\r\n        this.showSkinShop();\r\n    }\r\n\r\n    private onBtnHome():void {\r\n        FirebaseReport.reportInformation(FirebaseKey.skin_ranbui);\r\n        this.showMainView();\r\n    }\r\n\r\n    private onBtnWeapon(): void {\r\n        FirebaseReport.reportInformation(\"shouye_arms\");\r\n        FirebaseReport.reportAdjustParam(\"tc5zgk\");\r\n        var self = this;\r\n        cc.loader.loadRes(\"prefabs/game/weapon/WeaponRoot\", cc.Prefab, (e, p) => {\r\n            var pnode = cc.instantiate(p as cc.Prefab);\r\n            self.node.addChild(pnode, 90);\r\n\r\n            var act = pnode.getComponent(WeaponShop);\r\n            act.Init(this);\r\n            pnode.setPosition(0, 0);\r\n        });\r\n    }\r\n\r\n    private onBtnSign(): void {\r\n        FirebaseReport.reportInformation(\"shouye_gift\");\r\n        FirebaseReport.reportAdjustParam(\"pj9a8i\");\r\n        var self = this;\r\n        cc.loader.loadRes(\"prefabs/sign/SignInView\", cc.Prefab, (e, p) => {\r\n            var pnode = cc.instantiate(p as cc.Prefab);\r\n            self.node.addChild(pnode, 90);\r\n\r\n            var act = pnode.getComponent(SignInView);\r\n            act.Init(this);\r\n            pnode.setPosition(0, 0);\r\n        });\r\n    }\r\n\r\n    /**展示皮肤商店 */\r\n    private showSkinShop():void {\r\n        this.mainRoot.active = false;\r\n        this.SkinShopRoot.active = true;\r\n\r\n        this.shop_num_gold = cc.find(\"bg_gold copy/num_gold\", this.SkinShopRoot).getComponent(cc.Label);\r\n        this.listViewScript = this.SkinShopRoot.getChildByName(\"skinListView\").getComponent(ListView);\r\n        this.showModelOfShop = (cc.find(\"model_using/roleModel\", this.SkinShopRoot)).getComponent(sp.Skeleton);\r\n\r\n        this.shop_num_gold.string = userData.getData(localStorageKey.GOLD);\r\n        \r\n        this.initShopList();\r\n        this.updateShowModel();\r\n\r\n        cc.find(\"Canvas\").on(EventDefine.SHOP_ITEM_SELECTED, (index) => {\r\n            this.onListItemSelected(index);\r\n        });\r\n        cc.find(\"Canvas\").on(EventDefine.SHOP_ITEM_SELECTED_AND_CHANGE_USING_SKIN, (index) => {\r\n            userData.setData(localStorageKey.USING_SKIN_INDEX, index);\r\n            this.onListItemSelected(index);\r\n        });\r\n        cc.find(\"Canvas\").on(EventDefine.UNLOCK_SKIN_BY_AD, (index) => {\r\n            this.unlockIndex = index;\r\n            this.unlockSkinByAd();\r\n        });\r\n        cc.find(\"Canvas\").on(EventDefine.UNLOCK_SKIN_BY_GOLD, (index) => {\r\n            this.unlockIndex = index;\r\n            FirebaseReport.reportInformation(FirebaseKey.skin_goumai);\r\n            this.unlockSkin();\r\n        });\r\n    }\r\n\r\n    /**更新上方的展示模型的显示*/\r\n    private updateShowModel(bShowUpgradeAnim: boolean = false): void {\r\n        //let resName = this.shopDatas[this.listViewScript.selectedIndex].resName;\r\n\r\n        let usingIndex = this.shopDatas[this.listViewScript.selectedIndex].id + 1;\r\n        let weaponIdx = userData.getData(localStorageKey.USING_WEAPON_IDX) + 1;\r\n        if (bShowUpgradeAnim) {\r\n\r\n            SpineManager.getInstance().loadSkinSpine(this.showModelOfShop, this.weapon, true, usingIndex, weaponIdx, \"daiji\")\r\n\r\n            //SpineManager.getInstance().loadSpine(this.showModelOfShop, \"spine/players/\" + resName + \"\" + weaponIdx, true, \"default\", \"daiji\", () => {\r\n            //    SpineManager.getInstance().playSpinAnimation(this.showModelOfShop, \"shengji\", false, () => {\r\n            //        SpineManager.getInstance().playSpinAnimation(this.showModelOfShop, \"daiji\",true, null);\r\n            //    });\r\n            //});\r\n        }\r\n        else {\r\n            //SpineManager.getInstance().loadSpine(this.showModelOfShop, \"spine/players/\" + resName + \"\" + weaponIdx, true, \"default\", \"daiji\");\r\n            SpineManager.getInstance().loadSkinSpine(this.showModelOfShop, this.weapon, true, usingIndex, weaponIdx, \"daiji\")\r\n        }\r\n    }\r\n\r\n    private initShopList(): void {\r\n\r\n        let usingIndex = userData.getData(localStorageKey.USING_SKIN_INDEX);\r\n        this.shopDatas = userData.getData(localStorageKey.SHOP_DATAS);     \r\n\r\n        this.listViewScript.selectedIndex = usingIndex;\r\n        //this.listViewScript.replaceAll(this.shopDatas);\r\n        this.listViewScript.OnCreateView(this.shopDatas);\r\n        \r\n        this.listViewScript.scrollToTop();\r\n    }\r\n\r\n    public updateShopList(): void {\r\n        this.listViewScript.replaceAll(this.shopDatas);\r\n    }\r\n\r\n    private onListItemSelected(selectedId:number):void {\r\n        this.listViewScript.selectedIndex = selectedId;\r\n        this.updateShowModel();\r\n        this.updateShopList();\r\n    }\r\n\r\n    /**是否获得了解锁皮肤的广告奖励 */\r\n    private bEarnedRewardOfSkinAd:boolean;\r\n\r\n    private unlockSkinByAd():void {\r\n        // if (cc.sys.platform == cc.sys.ANDROID) {\r\n              FirebaseReport.reportInformation(FirebaseKey.skin_ad2);\r\n        //     jsb.reflection.callStaticMethod(\"org/cocos2dx/javascript/RewardedAdManager\", \"JsCall_showAdIfAvailable\", \"(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V\",'cc[\"MainScene\"].JavaCall_unlockSkin()', 'cc[\"MainScene\"].JavaCall_noAdCallback()', \"skin_ad2\", 'cc[\"MainScene\"].JavaCall_closeAdCallback()');\r\n        // }\r\n        // else {\r\n        //      this.unlockSkin();\r\n        // }\r\n        SdkManager.GetInstance().JavaRewardedAds(\"skin_ad2\", () => { this.unlockSkin(); }, () => { this.noAdCallback(); } ,()=>{ this.closeAdCallback(); });\r\n        this.m_BackFunc = () => { this.unlockSkin(); }\r\n    }\r\n\r\n    private unlockSkin():void{\r\n        let itemData = this.shopDatas[this.unlockIndex];\r\n        if (itemData) {\r\n            itemData.bUnlock = true;\r\n            userData.setData(localStorageKey.SHOP_DATAS, this.shopDatas);\r\n            userData.setData(localStorageKey.USING_SKIN_INDEX, this.unlockIndex);//同时设置为正在使用的皮肤\r\n            this.listViewScript.selectedIndex = this.unlockIndex;//同时选中新解锁的皮肤\r\n            this.updateShowModel(true);\r\n            this.updateShopList();\r\n        }\r\n    }\r\n\r\n    public static JavaCall_unlockSkin():void {\r\n        MainScene._instance.unlockSkin();\r\n    }\r\n\r\n\r\n    public static JavaCall_noAdCallback():void{\r\n        MainScene._instance.noAdCallback();\r\n    }\r\n\r\n    public static JavaCall_closeAdCallback():void {\r\n        MainScene._instance.closeAdCallback();\r\n    }\r\n    m_BackFunc:Function = null;\r\n    private noAdCallback():void{\r\n        if (this.m_BackFunc)\r\n        {\r\n            var func = this.m_BackFunc\r\n            Utils.showMessage(this.node, \"Ad not ready\",func);\r\n        }\r\n        else\r\n            Utils.showMessage(this.node, \"Ad not ready\");\r\n        this.m_BackFunc = null;\r\n    }\r\n\r\n    private closeAdCallback():void {\r\n        // to do\r\n    }\r\n\r\n    //private testDragon(): void {\r\n    //    let demonArmature = this.huolong.armature();\r\n\r\n    //    let demonSlot = demonArmature.getSlot(\"body\");\r\n\r\n    //    let factory = dragonBones.CCFactory.getInstance();\r\n\r\n    //    factory.replaceSlotDisplay(\r\n\r\n    //        this.lvlong.getArmatureKey(),  //绿龙骨架数据名称\r\n\r\n    //        \"armatureName\",                //绿龙骨架数据名称\r\n\r\n    //        \"tou\",                         //绿龙插槽数据名称\r\n\r\n    //        \"tou\",                         //绿龙显示对象数据名\r\n\r\n    //        demonSlot                      //影魔的头部插槽\r\n\r\n    //    );\r\n    //}\r\n\r\n\r\n    private testSpine(): void {\r\n        \t///\r\n\t//替换另一个皮肤下的某个部件\r\n\r\n        //\r\n\r\n        //this.zhu.setSkin(\"p6\");\r\n\r\n\r\n        //let slot1 = this.zhu.findSlot(\"wq\");\r\n        //if (slot1) {\r\n        //    console.log(\" Slot1 Is Not Null !!!\");\r\n        //}\r\n        //let slot2 = this.weapon.findSlot(\"wq6\");\r\n        //if (slot2) {\r\n        //    console.log(\" Slot2 Is Not Null !!!\");\r\n        //}\r\n        //let attachment = slot2.getAttachment();\r\n        //slot1.setAttachment(attachment);\r\n\r\n\r\n      /*  SpineManager.getInstance().changSpinSkin(this.zhu, this.weapon, 3, 4);*/\r\n\r\n\r\n\r\n        //let skeleton = this.zhu;\r\n        //let slotName = \"wq\";//'yb/ysz/wq';\r\n        //let targetSkinName = 'p8';\r\n        //let targetAttaName = 'wq';// 这里获取的是Spine中皮肤占位符的名字\r\n        //const slot = skeleton.findSlot(slotName);// 获取当前动画中Slot数据\r\n\r\n        //const skeletonData = skeleton.skeletonData.getRuntimeData() as sp.spine.SkeletonData;// 获取 Spine Runtime 使用的 SkeletonData\r\n        //const slotIndex = skeletonData.findSlotIndex(slotName);// 当去当前Slot的index\r\n\r\n        //if (slotIndex) {\r\n        //    console.log(\"slotIndex     +\" + slotIndex);\r\n        //}\r\n\r\n        //const skin = skeletonData.findSkin(targetSkinName);// 获取需要替换的皮肤数据\r\n\r\n        //if (skin) {\r\n        //    console.log(\"skin is has !!!!\");\r\n        //}\r\n\r\n        //const atta = skin.getAttachment(0, targetAttaName);// 获取目标皮肤相应index的皮肤占位符数据\r\n        //if (atta) {\r\n        //    console.log(\"atta is has !!!!!!\");\r\n        //}\r\n\r\n\r\n        //if (slot) {\r\n        //    slot.setAttachment(atta);// 数据替换\r\n        //}\r\n        //else {\r\n\r\n        //    console.log(\"this.slot is null !!!!!!\");\r\n        //}\r\n\r\n        //skeleton.invalidAnimationCache();\r\n\r\n      \r\n\r\n\r\n        //动态加载一个Texture\r\n        //cc.loader.loadRes(\"texture/game/weapon/wq2\", cc.Texture2D, (error, image) => {\r\n        //    if (!error) {\r\n        //        this.changeSlot(this.zhu, \"wq\", image);\r\n        //    }\r\n        //});\r\n\r\n\r\n       // this.changeSlot(this.zhu, \"wq\", cc.loader.getRes(\"texture/game/weapon/wq2\"));\r\n\r\n\r\n\r\n    }\r\n\r\n    //changePartialCloth(skeleton: sp.Skeleton, slotName: string, targetSkinName: string, targetAttaName: string) {\r\n    //    // console.log('change cloth:', slotName, targetSkinName, targetAttaName);\r\n    //    const slot = skeleton.findSlot(slotName);\r\n    //    const skeletonData = skeleton.skeletonData.getRuntimeData();\r\n    //    const skin = skeletonData.findSkin(targetSkinName);\r\n    //    const slotIndex = skeletonData.findSlotIndex(slotName);\r\n    //    const attachment = skin.getAttachment(slotIndex, targetAttaName);\r\n    //    if (!slot || !attachment) {\r\n    //        cc.error(slot && attachment, \"slots: \" + slotName + \", attach: \" + targetAttaName + \" not exists!\");\r\n    //        return;\r\n    //    }\r\n    //    slot.setAttachment(attachment);\r\n    //    // 如果spine使用了private或者shared等缓存模式，则需要更新缓存。\r\n    //    skeleton.invalidAnimationCache();\r\n    //}\r\n\r\n\r\n    //changeParSlot() {\r\n    //    let sk1: sp.Skeleton;\r\n    //    let sk2: sp.Skeleton;\r\n\r\n    //    let parts = [\"left-arm\", \"left-hand\", \"left-shoulder\"];\r\n    //    for (let i = 0; i < parts.length; i++) {\r\n    //        let slot1 = sk1.findSlot(parts[i]);\r\n    //        let slot2 = sk2.findSlot(parts[i]);\r\n    //        let attachment = slot2.getAttachment();\r\n    //        slot1.setAttachment(attachment);\r\n    //    }\r\n    //}\r\n\r\n\r\n    //public changeSlot(sk: sp.Skeleton, slotName: string, texture: cc.Texture2D) {\r\n    //    //获取插槽\r\n    //    let slot = sk.findSlot(slotName);\r\n    //    //获取挂件\r\n    //    let att = slot.attachment;\r\n    \r\n    //    //创建region\r\n    //    let skeletonTexture = new sp.SkeletonTexture();\r\n    //    skeletonTexture.setRealTexture(texture)\r\n    //    let page = new sp.spine.TextureAtlasPage()\r\n    //    page.name = texture.name\r\n    //    page.uWrap = sp.spine.TextureWrap.ClampToEdge\r\n    //    page.vWrap = sp.spine.TextureWrap.ClampToEdge\r\n    //    page.texture = skeletonTexture\r\n    //    page.texture.setWraps(page.uWrap, page.vWrap)\r\n    //    page.width = texture.width\r\n    //    page.height = texture.height\r\n\r\n    //    let region = new sp.spine.TextureAtlasRegion()\r\n    //    region.page = page\r\n    //    region.width = texture.width\r\n    //    region.height = texture.height\r\n    //    region.originalWidth = texture.width\r\n    //    region.originalHeight = texture.height\r\n\r\n    //    region.rotate = false\r\n    //    region.u = 0\r\n    //    region.v = 0\r\n    //    region.u2 = 1\r\n    //    region.v2 = 1\r\n\r\n    //    region.texture = skeletonTexture\r\n    //    //替换region\r\n    //    att.region = region\r\n    //    att.setRegion(region)\r\n    //    att.updateOffset();\r\n    //}\r\n\r\n    //updatePartialSkin(ani: sp.Skeleton, tex2d: cc.Texture2D, slotsName: string) {\r\n    //    let slot: sp.spine.Slot = ani.findSlot(slotsName);\r\n    //    let attachment: sp.spine.RegionAttachment = slot.getAttachment() as sp.spine.RegionAttachment;\r\n    //    if (!slot || !attachment) {\r\n    //        cc.error('error...');\r\n    //        return;\r\n    //    }\r\n\r\n    //    let region: sp.spine.TextureAtlasRegion = attachment.region as sp.spine.TextureAtlasRegion;\r\n    //    let skeletonTexture = new sp.SkeletonTexture();\r\n    //    skeletonTexture.setRealTexture(tex2d);\r\n\r\n    //    region.u = 0;\r\n    //    region.v = 0;\r\n    //    region.u2 = 1;\r\n    //    region.v2 = 1;\r\n    //    region.width = tex2d.width;\r\n    //    region.height = tex2d.height;\r\n    //    region.originalWidth = tex2d.width;\r\n    //    region.originalHeight = tex2d.height;\r\n    //    region.rotate = false;\r\n    //    region.texture = skeletonTexture;\r\n    //    region.page = null;\r\n    //    attachment.width = region.width;\r\n    //    attachment.height = region.height;\r\n    //    attachment.setRegion(region);\r\n\r\n    //    // mark: 不需要创建新的sp.spine.TextureAtlasRegion， 直接更新原attachment下的region即可。\r\n    //    // let region: sp.spine.TextureRegion = this.createRegion(tex2d);\r\n    //    // attachment.setRegion(region);\r\n    //    // attachment.width = region.width;\r\n    //    // attachment.height = region.height;\r\n    //    attachment.updateOffset();\r\n    //    slot.setAttachment(attachment);\r\n    //    // skeleton如果使用了缓存模式则需要刷新缓存\r\n    //    ani.invalidAnimationCache();\r\n    //}\r\n\r\n    //createRegion(tex: cc.Texture2D): sp.spine.TextureAtlasRegion {\r\n        \r\n    //    let skeletonTexture = new sp.SkeletonTexture();\r\n    //    skeletonTexture.setRealTexture(tex);\r\n\r\n    //    // mark: 可以不设置page\r\n    //    // let page = new sp.spine.TextureAtlasPage();\r\n    //    // page.name = tex.name;\r\n    //    // page.uWrap = sp.spine.TextureWrap.ClampToEdge;\r\n    //    // page.vWrap = sp.spine.TextureWrap.ClampToEdge;\r\n    //    // page.texture = skeletonTexture;\r\n    //    // page.texture.setWraps(page.uWrap, page.vWrap);\r\n    //    // page.width = tex.width;\r\n    //    // page.height = tex.height;\r\n\r\n    //    let region = new sp.spine.TextureAtlasRegion();\r\n    //    // region.page = page;\r\n    //    region.width = tex.width;\r\n    //    region.height = tex.height;\r\n    //    region.originalWidth = tex.width;\r\n    //    region.originalHeight = tex.height;\r\n    //    region.rotate = false;\r\n    //    region.u = 0;\r\n    //    region.v = 0;\r\n    //    region.u2 = 1;\r\n    //    region.v2 = 1;\r\n    //    region.texture = skeletonTexture;\r\n    //    return region;\r\n    //}\r\n\r\n\r\n    //// 使用外部图片换装\r\n    //changePartialWithExternalTexture(ani: sp.Skeleton, slotName: string, tex2d: cc.Texture2D) {\r\n    //    let slot: sp.spine.Slot = ani.findSlot(slotName);\r\n    //    let attach: sp.spine.RegionAttachment | sp.spine.MeshAttachment = slot.getAttachment() as (sp.spine.RegionAttachment | sp.spine.MeshAttachment);\r\n\r\n    //    let spineTexture: sp.SkeletonTexture = new sp.SkeletonTexture({ width: tex2d.width, height: tex2d.height });\r\n    //    spineTexture.setRealTexture(tex2d);\r\n\r\n    //    // 单张图片可以不用创建page\r\n    //    // let page = new sp.spine.TextureAtlasPage();\r\n    //    // page.name = tex2d.name;\r\n    //    // page.uWrap = sp.spine.TextureWrap.ClampToEdge;\r\n    //    // page.vWrap = sp.spine.TextureWrap.ClampToEdge;\r\n    //    // page.texture = spineTexture;\r\n    //    // page.texture.setWraps(page.uWrap, page.vWrap);\r\n    //    // page.width = tex2d.width;\r\n    //    // page.height = tex2d.height;\r\n\r\n    //    // let region: sp.spine.TextureAtlasRegion = new sp.spine.TextureAtlasRegion();\r\n    //    let region: sp.spine.TextureAtlasRegion = attach.region as sp.spine.TextureAtlasRegion;\r\n    //    // region.page = page;\r\n    //    region.width = tex2d.width;\r\n    //    region.height = tex2d.height;\r\n    //    region.originalWidth = tex2d.width;\r\n    //    region.originalHeight = tex2d.height;\r\n\r\n    //    region.rotate = false;\r\n    //    region.u = 0;\r\n    //    region.v = 0;\r\n    //    region.u2 = 1;\r\n    //    region.v2 = 1;\r\n    //    // 换图后可以通过设置x、y偏移量来对准位置（如果切图有偏差）\r\n    //    // region.offsetX = 300;\r\n    //    // region.offsetY = 200;\r\n    //    region.texture = spineTexture;\r\n    //    region.renderObject = region;\r\n\r\n    //    // 如果不修改attach的大小则新图片会被限制在原始图片大小范围内\r\n    //    attach.width = tex2d.width;\r\n    //    attach.height = tex2d.height;\r\n    //    cc.log(attach);\r\n\r\n    //    if (attach instanceof sp.spine.MeshAttachment) {\r\n    //        attach.updateUVs();\r\n    //    } else {\r\n    //        attach.setRegion(region);\r\n    //        attach.updateOffset();\r\n    //    }\r\n\r\n    //    // ani 如果使用了缓存模式则需要刷新缓存, 一般换装为了不英雄别的动画都需要设置缓存模式为privite_cache\r\n    //    ani.invalidAnimationCache();\r\n    //}\r\n\r\n}\r\n"]}