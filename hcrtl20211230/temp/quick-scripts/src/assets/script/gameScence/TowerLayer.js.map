{"version":3,"sources":["assets\\script\\gameScence\\TowerLayer.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nimport PrefabsManager from \"../manager/PrefabsManager\";\r\nimport { SoundManager } from \"../manager/SoundManager\";\r\nimport SpineManager from \"../manager/SpineManager\";\r\nimport Bullet from \"./Bullet\";\r\nimport GameScence from \"./GameScence\";\r\nimport RoleBase, { RoleType } from \"./RoleBase\";\r\nimport TowerTile from \"./TowerTile\";\r\nimport LevelData from \"../data/LevelData\";\r\nimport { FirebaseKey, FirebaseReport } from \"../util/FirebaseReport\";\r\nimport { userData } from \"../data/UserData\";\r\nimport BossBase from \"./BossBase\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class TowerLayer extends cc.Component {\r\n\r\n    @property(cc.Node)\r\n    loseNode: cc.Node = null;//游戏失败\r\n    @property(cc.Node)\r\n    successNode: cc.Node = null;//游戏胜利\r\n\r\n\r\n    @property(cc.Prefab)\r\n    towerFloorPrefab: cc.Prefab = null;//塔底\r\n\r\n    @property(cc.Prefab)\r\n    towerRoofPrefab: cc.Prefab = null;//塔顶\r\n\r\n    @property(cc.Prefab)\r\n    towerTilePrefab: cc.Prefab = null;//塔格子prefab\r\n\r\n    @property(cc.Prefab)\r\n    towerPrefab: cc.Prefab = null;//塔每一栋\r\n\r\n    @property(cc.Node)\r\n    talkNode: cc.Node = null;//游戏剧情\r\n\r\n    private towerOffsetX = 350;\r\n    private towerTileOffsetY = 150;\r\n\r\n    private playerposition = 0;\r\n\r\n    private size = 0;\r\n    private isMove = false;\r\n    private isFight = false;\r\n    private isDie = false;\r\n    @property(sp.Skeleton)\r\n    caidaiAni: sp.Skeleton = null;\r\n    @property(cc.Node)\r\n    public weaponIcon: cc.Node = null;\r\n\r\n    m_BossInfo: BossBase = null;\r\n\r\n\r\n    public canTouck: boolean = true;\r\n\r\n    private curSizeIndex = 0;  //当前所处的物体的层级排序\r\n\r\n    private isGetPrincess = true; //获取到了公主\r\n\r\n    onLoad() {\r\n\r\n    }\r\n\r\n    start() {\r\n    }\r\n    //初始化塔楼\r\n    init(towerData, weapon: sp.Skeleton) {\r\n        this.isMove = false;\r\n        this.isFight = false;\r\n        this.isDie = false;\r\n        this.size = towerData.length;\r\n        let i = 0;\r\n        for (let i = towerData.length - 1; i >= 0; i--) {\r\n            let element = towerData[i];\r\n            if (element.type == \"item\" || element.type == \"princess\") {\r\n                let tempNode = cc.instantiate(PrefabsManager.getInstance().monsterPrefabList[element.prefab])\r\n                if (tempNode) {\r\n                    this.node.addChild(tempNode);\r\n                    tempNode.setPosition(cc.v2(-148.936 + i * this.towerOffsetX, -490));\r\n                    let box = tempNode.getComponent(RoleBase);\r\n                    box.init(element, null);\r\n                    //let roleBase = tempNode.getComponent(RoleBase);\r\n                    //roleBase.Init();\r\n                    if (element.scale) {\r\n                        box.SetScale(element.scale);\r\n                    }\r\n                }\r\n            }            \r\n            else if (element && element.data) {\r\n                let tempNodeParent = cc.instantiate(this.towerPrefab);\r\n                tempNodeParent.setPosition(cc.v2(-148.936 + i * this.towerOffsetX, -410));\r\n                let data = element.data;\r\n                this.node.addChild(tempNodeParent);\r\n                let end = 0;\r\n                tempNodeParent.name = \"tower\" + i;\r\n                tempNodeParent.addChild(this.addFloor());//塔底\r\n                for (let j = 0; j < data.length; j++) {//塔身\r\n                    let element1 = data[j];\r\n                    let tile = cc.instantiate(this.towerTilePrefab);\r\n                    tile.position = new cc.Vec3(0, this.towerTileOffsetY / 2 + (j - 1) * this.towerTileOffsetY, 0);\r\n                    tile.on(cc.Node.EventType.TOUCH_END, this.towerTouch, this);\r\n                    let towerTile = tile.getComponent(TowerTile);\r\n                    towerTile.initData(this.node.childrenCount - 1, element1, weapon);//初始化塔身数据\r\n                    \r\n                    tempNodeParent.addChild(tile);\r\n                    end = j;\r\n                };\r\n                tempNodeParent.addChild(this.addRoof(end + 1));//塔顶\r\n            }\r\n            else if (element.type == \"boss\") {\r\n                let tempNode = cc.instantiate(PrefabsManager.getInstance().bossPrefanList[element.prefab])\r\n                if (tempNode) {\r\n                    this.node.addChild(tempNode);\r\n                    tempNode.setPosition(cc.v2(-148.936 + i * this.towerOffsetX, -490));\r\n                    this.m_BossInfo = tempNode.getComponent(BossBase);\r\n                    this.m_BossInfo.Init();\r\n                    if (element.scale) {\r\n                        this.m_BossInfo.SetScale(element.scale);\r\n                    }\r\n                }            \r\n            }          \r\n\r\n        };\r\n        \r\n        this.findPlayerColumn();      \r\n    }\r\n\r\n    public PrinceTalk() {        \r\n        var princess = this.findPrincess();\r\n        this.SetTalkInfo(princess);\r\n    }\r\n\r\n    //查找角色所在塔楼\r\n    findPlayerColumn() {\r\n        let nodeChildren = this.node.children;\r\n        for (let i = 0; i < nodeChildren.length; i++) {\r\n            let node = nodeChildren[i].children;\r\n            for (let j = 0; j < node.length; j++) {\r\n                let temp = node[j]; \r\n                if (temp) {\r\n                    let towerTile = temp.getComponent(TowerTile);\r\n                    if (towerTile && towerTile.isPlayer()) {\r\n                        this.playerposition = i;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        //去掉角色塔楼事件\r\n        let children = this.node.children[this.playerposition].children;\r\n        for (let i = 0; i < children.length; i++) {\r\n            let node = children[i];\r\n            let towerTile = node.getComponent(TowerTile);\r\n            if (towerTile) {\r\n                if (towerTile.hasItem) {\r\n                    continue;\r\n                }\r\n            }\r\n            node.off(cc.Node.EventType.TOUCH_END, this.towerTouch, this);\r\n        }\r\n        this.curSizeIndex = this.playerposition - 1;\r\n\r\n    }\r\n\r\n    public addPlayerHp(addHp:number):void { \r\n        let player = this.findPlayer();\r\n        let playerRole = player.getComponent(RoleBase);\r\n\r\n        playerRole.addHp(addHp);\r\n    }\r\n\r\n    public addPlayerAniHp(sprID: number, addHp: number): void {\r\n        let player = this.findPlayer();\r\n        let playerRole = player.getComponent(RoleBase);\r\n        this.weaponIcon.parent = null;\r\n        this.node.parent.addChild(this.weaponIcon, 100);\r\n        this.weaponIcon.active = true;\r\n        this.weaponIcon.setScale(1, 1);\r\n\r\n        var spr = this.weaponIcon.getComponent(cc.Sprite);\r\n\r\n\r\n        this.onSetIcon(spr, sprID + \"\");\r\n        this.weaponIcon.setPosition(0, 0);\r\n\r\n\r\n        //var pos = this.getNodePos(player, this.weaponIcon)\r\n        let targerPosX = player.position.x / 2 + player.parent.position.x + player.parent.parent.position.x + this.node.position.x;\r\n        let targerPosY = player.position.y / 2 + player.parent.position.y + player.parent.parent.position.y + this.node.position.y;\r\n\r\n\r\n        var func = cc.sequence(cc.delayTime(0.5), cc.callFunc(() => {\r\n            this.weaponIcon.runAction(cc.scaleTo(1, 0.3));\r\n        }), cc.moveTo(1, targerPosX, targerPosY), cc.callFunc(() => {\r\n            playerRole.addHp(addHp);\r\n            this.weaponIcon.active = false;\r\n\r\n            let role = player.getComponent(RoleBase);\r\n            role.loadSpAin(sprID);\r\n            role.idle();\r\n\r\n        }))\r\n        this.weaponIcon.runAction(func);\r\n\r\n      \r\n        //console.log(\"addHp------  :\" + addHp);\r\n\r\n        //playerRole.addHp(addHp);        \r\n    }\r\n   \r\n    //curNode 待转换的节点 targetNode 目标节点\r\n    private getNodePos(curNode, targetNode) {\r\n        var worldPos = curNode.parent.convertToWorldSpaceAR(curNode.position);\r\n        var pos = targetNode.convertToWorldSpaceAR(worldPos);\r\n        return pos\r\n    }\r\n\r\n    private onSetIcon(spr: cc.Sprite, iconPath: string) {\r\n        var strPath: string = \"texture/game/weapon/wq\"//\"texture/game/gamepopup/d\";\r\n        strPath = strPath + iconPath;\r\n        cc.loader.loadRes(strPath, cc.SpriteFrame, (err, sp) => {\r\n            spr.spriteFrame = sp as cc.SpriteFrame;\r\n        });\r\n    }\r\n\r\n    //查找角色所有格子\r\n    findPlayer() {\r\n        let playerColumn = this.node.children[this.playerposition];\r\n        if (playerColumn) {\r\n            for (let i = 0; i < playerColumn.children.length; i++) {\r\n                let playerTile = playerColumn.children[i].getComponent(TowerTile);\r\n                if (playerTile && playerTile.isPlayer()) {\r\n                    return playerTile.getPlayer();\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    //查找角色所有格子\r\n    findPrincess() {\r\n        let playerColumn = this.node.children[this.playerposition];\r\n        if (playerColumn) {\r\n            for (let i = 0; i < playerColumn.children.length; i++) {\r\n                let playerTile = playerColumn.children[i].getComponent(TowerTile);\r\n                if (playerTile && playerTile.isPrincess()) {\r\n                    return playerTile.getPrincess();\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    curTargetIndex: number = -1; \r\n    //点击塔楼事件\r\n    public towerTouch(touch: Event) {            \r\n        if (this.isMove || this.isFight || this.isDie) {\r\n            return;\r\n        }\r\n\r\n        if (this.canTouck == false) {\r\n            return\r\n        }\r\n\r\n        let currentTarget = touch.currentTarget as any;//当前点击的格子  \r\n         \r\n       \r\n        let player = this.findPlayer();//找到角色\r\n\r\n        if (player) {\r\n            //获取当前层\r\n            let towerTile = currentTarget.getComponent(TowerTile);\r\n\r\n            if (towerTile) {\r\n                //如果是角色本身不处理\r\n                if(towerTile.getPlayer()){\r\n                    return ;\r\n                }\r\n                //如果是销不处理\r\n                if (towerTile.isLock()) {\r\n                    return;\r\n                }\r\n\r\n                if (towerTile.isGuidance()) {\r\n                    towerTile.unGuidance();\r\n                    this.HideTalkInfo();\r\n                }\r\n\r\n                let monster = towerTile.getMonster();\r\n                if (monster == null) {//怪物不存在\r\n                    monster = towerTile.getItem();//是否存在道具\r\n                }\r\n                if (monster == null) {\r\n                    monster = towerTile.getPrincess();\r\n                }\r\n                //不存在怪物与道具不做处理\r\n                if(monster==null){\r\n                    return ;\r\n                }\r\n                var tempTargetIndex = towerTile.node.uuid//towerTile.getIndex();\r\n                //计算怪物目标位置\r\n                let targerPost = player.parent.convertToNodeSpaceAR(monster.parent.convertToWorldSpaceAR(monster.position));\r\n\r\n                var isSamePos = false;\r\n                var isSameAcross = false;\r\n           \r\n                if (tempTargetIndex == this.curTargetIndex) {\r\n                    var length = Math.abs(targerPost.x - player.position.x);\r\n                    if (length <= 120) {\r\n                        isSamePos = true;\r\n                    }\r\n                    else {\r\n                        isSameAcross = true;\r\n                    }\r\n                }\r\n                else {                   \r\n                    this.curTargetIndex = tempTargetIndex;\r\n                }\r\n               \r\n\r\n                if (Math.abs(targerPost.y - player.position.y) <= 1) {\r\n                    var length = Math.abs(targerPost.x - player.position.x);\r\n                    if (length <= 120) {\r\n                        isSamePos = true;\r\n                    }\r\n                    else  {\r\n                        isSameAcross = true;\r\n                    }\r\n                }\r\n\r\n\r\n                let posCache = this.playerReturnPosition(player);//计算角色返回的位置player.position;\r\n                let playerRole = player.getComponent(RoleBase);\r\n                let monsterRole = monster.getComponent(RoleBase);\r\n                this.isFight = true;\r\n\r\n                if (isSamePos) {\r\n                    this.attackedLater(playerRole, monsterRole, posCache, towerTile);\r\n                    return;\r\n                }\r\n\r\n                if (isSameAcross) {\r\n                    targerPost.y = player.position.y;\r\n                    playerRole.jumpLandTo(targerPost, userData.TempStandX, () => {\r\n                        this.attackedLater(playerRole, monsterRole, posCache, towerTile);\r\n                    });\r\n                    return;\r\n                }\r\n\r\n                let Post = this.convertNodeSpaceAR(player, towerTile.node)\r\n\r\n                targerPost = cc.v2(targerPost.x, Post.y + 28);\r\n                //跳向怪物格子\r\n                playerRole.jumpTo(targerPost, userData.TempStandX, () => {\r\n                    //if (!monsterRole.hasItem) {//如果不是道具\r\n                    //    //角色攻击\r\n                    //   this.attack(playerRole, monsterRole, posCache, towerTile);\r\n                    //    if (!monsterRole.longRange) {//不是远程怪物\r\n                    //        monsterRole.attack(() => {//播放怪物攻击动画\r\n                    //            monsterRole.idle();//播放后进入待机\r\n                    //        });\r\n                    //    }\r\n                    //} else {//格子为道具\r\n                    //    cc.tween(playerRole.node).delay(0.5).call(() => {\r\n                    //        this.attacked(playerRole, monsterRole, posCache, towerTile);\r\n                    //    }).start();\r\n                    //}\r\n\r\n                    //this.playerAddLastTowerTile(towerTile);//把角色添加到新的格子\r\n\r\n                    //let player = this.findPlayer();\r\n                    //player.setParent(towerTile);\r\n\r\n                    this.attackedLater(playerRole, monsterRole, posCache, towerTile);\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    public  convertNodeSpaceAR(node1: cc.Node, node2: cc.Node) {\r\n        return node1.parent.convertToNodeSpaceAR(node2.parent.convertToWorldSpaceAR(node2.position))\r\n    }\r\n\r\n    moveSelfTile: boolean = false;\r\n    //攻击之后\r\n    private attackedLater(playerRole, monsterRole, posCache, towerTile) {\r\n    \r\n        if (towerTile.getIndex() != this.playerposition) {\r\n            var til = this.CheckTowerNull(towerTile);\r\n            if (til) {\r\n                if (this.moveSelfTile) {\r\n\r\n                }\r\n                else {\r\n                    this.moveSelfTile = true;\r\n                    let towerTileMonste = this.node.children[towerTile.getIndex()];\r\n                    let index1 = towerTileMonste.children.indexOf(towerTile.node);\r\n                    let index2 = towerTileMonste.children.indexOf(til.node);\r\n\r\n\r\n                    this.checkUpTowerMonster(til);\r\n                    if (index2 < index1)\r\n                        this.playerAddTowerTile(til, playerRole, 2);\r\n                    else\r\n                        this.playerAddTowerTile(til, playerRole, 1);\r\n                }                \r\n            }\r\n        }\r\n        playerRole.idle();\r\n        if (monsterRole.isPrincess()) {\r\n            cc.tween(playerRole.node).delay(0.5).call(() => {\r\n                towerTile.SetIsPriences(false);\r\n                this.attacked(playerRole, monsterRole, posCache, towerTile);\r\n            }).start();\r\n        }\r\n        else if (!monsterRole.hasItem) {\r\n            this.attack(playerRole, monsterRole, posCache, towerTile);\r\n            //if (!monsterRole.longRange) {//不是远程怪物\r\n            //    monsterRole.attack(() => {//播放怪物攻击动画\r\n            //        monsterRole.idle();//播放后进入待机\r\n            //    });\r\n            //}\r\n        }\r\n        else {\r\n            cc.tween(playerRole.node).delay(0.5).call(() => {\r\n                this.attacked(playerRole, monsterRole, posCache, towerTile);\r\n            }).start();\r\n        }\r\n    }\r\n\r\n   \r\n\r\n    //攻击后继动作\r\n    private attacked(playerRole, monsterRole, posCache, towerTile) {\r\n        //攻击血量计算\r\n        this.calculationHp(playerRole, monsterRole, towerTile, (die) => {\r\n            if (!die) {\r\n                if (!this.checkUpTowerHasMonster(towerTile)) {//塔楼是否还有怪物\r\n\r\n                    //if (LevelData.curLevel == 1) {\r\n                    //    this.DevilsAni(() => { this.fateEndAction(towerTile); });\r\n                    //}\r\n                    //else {\r\n                    //    this.fateEndAction(towerTile);\r\n                    //}\r\n\r\n                    this.fateEndAction(towerTile);\r\n\r\n                    return;\r\n                }\r\n\r\n                this.isFight = false;\r\n\r\n                //角色跳回原来的格子\r\n                //playerRole.jumpTo(posCache, 0, () => {\r\n                //怪物塔楼减少\r\n                playerRole.idle();//playerRole.upLevel();\r\n                //this.playerChangeTile(playerRole.node);\r\n                //是否存在怪物或道具\r\n                this.checkUpLongRange(towerTile, playerRole);\r\n\r\n                if (towerTile.hasMonster() || towerTile.hasItem()) {\r\n                    //是否存在远程攻击怪，有则进行远程攻击\r\n                        \r\n                    return;\r\n                }\r\n\r\n                this.checkOpenCloseTile(towerTile);\r\n                ////检测塔楼怪物\r\n                //this.checkUpTowerMonster(towerTile);\r\n                ////角色塔楼增加\r\n                //this.playerAddTowerTile(towerTile, playerRole)\r\n                //});\r\n                return;\r\n            }\r\n            else {\r\n                \r\n                //角色死亡，游戏结束\\\r\n                this.gameLose();\r\n               \r\n            }           \r\n            // this.loseNode.active = true;\r\n            // SoundManager.getInstance().playEffect(SoundManager.Lose_Jingle);\r\n        });\r\n    }\r\n\r\n    private fateEndAction(towerTile: TowerTile = null) {\r\n        if (towerTile) {\r\n            this.playerAddLastTowerTile(towerTile);//把角色添加到新的格子\r\n        }        \r\n        this.isFight = false;//战斗结束\r\n        this.curTargetIndex = -1;\r\n\r\n        //let player = this.findPlayer();\r\n        //let playerTowerTile = player.parent.getComponent(TowerTile);\r\n        //if (towerTile.getIndex() == playerTowerTile.getIndex()) {\r\n        //    return;\r\n        //}\r\n\r\n        GameScence.Instance.flushMoveCount();\r\n        this.FateBossAct();\r\n\r\n    }\r\n\r\n    //判定是否有Boss战 / 最终宝箱\r\n    private FateBossAct() {\r\n        let curNode = this.node.children[this.curSizeIndex];\r\n    \r\n        if (curNode.name.indexOf(\"Boss\") != -1) {\r\n            this.FateBossAni();\r\n        }\r\n        else if (curNode.name.indexOf(\"Treasure\") != -1) {\r\n            this.TreasureBoxAni();\r\n        }\r\n        else if (curNode.name.indexOf(\"princess\") != -1) {\r\n            this.PrincessAni();\r\n        }\r\n    }\r\n\r\n    //进行Boss战\r\n    private FateBossAni() {\r\n        let player = null\r\n        if (this.curPlayer == null) {\r\n            player = this.findPlayer();\r\n            this.curPlayer = player;\r\n        }\r\n        else {\r\n            player = this.curPlayer;\r\n        }\r\n        let playerRole = player.getComponent(RoleBase);\r\n        let boss = this.node.children[this.curSizeIndex].getComponent(BossBase);\r\n\r\n        if (player.parent.name == \"Tower_tile\") {\r\n            let TempY = player.parent.position.y;\r\n            let tile = this.node.children[this.playerposition];\r\n           \r\n            //var pseq = cc.sequence(cc.fadeTo(1, 0), cc.callFunc(() => {\r\n            //}));\r\n           \r\n            for (var i = 0; i < tile.childrenCount; i++) {\r\n                //tile.children[i].opacity = 0;             \r\n                tile.children[i].runAction(cc.fadeTo(1, 0));\r\n            }\r\n            player.setParent(tile);\r\n            player.opacity = 255;\r\n            player.setPosition(player.position.x, player.position.y + TempY);\r\n        }            \r\n\r\n        var attackCount = 0;\r\n        var attackMax = 3;\r\n        playerRole.SetScale(player.scaleX * 2.5, () => {\r\n            playerRole.AttackBoss(() => {\r\n                attackCount++;\r\n                if (attackCount >= attackMax) {\r\n                    playerRole.idle();\r\n                    boss.Death(() => {\r\n                        let targerPost = player.parent.convertToNodeSpaceAR(boss.node.parent.convertToWorldSpaceAR(boss.node.position));\r\n                        playerRole.jumpLandTo(targerPost, 0, () => {\r\n                            //this.attackedLater(playerRole, monsterRole, posCache, towerTile);\r\n                            playerRole.idle();\r\n                            this.moveTowerLayer(\r\n                                () => {\r\n                                    if (!this.curSizeView()) {\r\n                                        this.FateBossAct();\r\n                                    }   \r\n                                }\r\n                            )                           \r\n                        });\r\n                    });\r\n                }\r\n            });\r\n            boss.Attack();\r\n        }, true);                \r\n    }\r\n\r\n    curPlayer = null;\r\n\r\n    //进行公主处理\r\n    private PrincessAni() {\r\n        let player = null\r\n        if (this.curPlayer == null) {\r\n            player = this.findPlayer();\r\n            this.curPlayer = player;\r\n        }\r\n        else {\r\n            player  = this.curPlayer;\r\n        }\r\n        \r\n        let playerRole = player.getComponent(RoleBase);\r\n        let princess = this.node.children[this.curSizeIndex].getComponent(RoleBase);\r\n        let targerPost = player.parent.convertToNodeSpaceAR(princess.node.parent.convertToWorldSpaceAR(princess.node.position));\r\n        targerPost.y = player.position.y\r\n\r\n        playerRole.jumpLandTo(targerPost, userData.TempStandX, () => {\r\n            //this.attackedLater(playerRole, monsterRole, posCache, towerTile);\r\n            playerRole.idle();\r\n\r\n\r\n            this.moveTowerLayer(\r\n                () => {\r\n                    this.scheduleOnce(function () {\r\n                        if (!this.curSizeView()) {\r\n                            this.FateBossAct();\r\n                        }\r\n                    }, 1);\r\n                }\r\n            )  \r\n\r\n           \r\n            //GameScence.Instance.flushMoveCount();            \r\n        });\r\n\r\n    }\r\n    \r\n\r\n    //进行宝箱处理\r\n    private TreasureBoxAni() {\r\n        let player = null\r\n        if (this.curPlayer == null) {\r\n            player = this.findPlayer();\r\n            this.curPlayer = player;\r\n        }\r\n        else {\r\n            player = this.curPlayer;\r\n        }\r\n        let playerRole = player.getComponent(RoleBase);\r\n        let box = this.node.children[this.curSizeIndex].getComponent(RoleBase);\r\n        let targerPost = player.parent.convertToNodeSpaceAR(box.node.parent.convertToWorldSpaceAR(box.node.position));\r\n        targerPost.y = player.position.y\r\n        var self = this;\r\n        let remove = () => {\r\n            SoundManager.getInstance().playEffect(SoundManager.ClaimSword);\r\n            box.node.removeFromParent();\r\n          \r\n        }\r\n        \r\n        playerRole.jumpLandTo(targerPost,userData.TempStandX , () => {\r\n            //this.attackedLater(playerRole, monsterRole, posCache, towerTile);\r\n            playerRole.idle();\r\n            box.boxAction();\r\n            \r\n            this.scheduleOnce(function () {\r\n                remove();\r\n                self.moveTowerLayer(\r\n                    () => {\r\n                        if (!self.curSizeView()) {\r\n                            self.FateBossAct();\r\n                        }\r\n                    }\r\n                )                \r\n            }, 2);                      \r\n        });\r\n\r\n    }\r\n\r\n    //检测是否是增益怪\r\n    private checkUpGain(towerTile: TowerTile) {\r\n        let gainList = [];\r\n        let towerTileMonste = this.node.children[towerTile.getIndex()];\r\n        let towerTiles = towerTileMonste.children;\r\n        for (let i = 0; i < towerTiles.length; i++) {\r\n            let tile = towerTiles[i];\r\n            let towerTileTemp = tile.getComponent(TowerTile);\r\n            if (towerTileTemp) {\r\n                if (towerTileTemp.hasMonster()) {\r\n                    let monsters = towerTileTemp.getMonsters();\r\n                    monsters.forEach(monster => {\r\n                        if (monster) {\r\n                            let monsterRole = monster.getComponent(RoleBase);\r\n                            if (monsterRole.gain) {\r\n                                gainList.push(monsterRole);\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n        //为身边的怪增加血量\r\n        gainList.forEach(gain => {\r\n            let gainTowerTile = gain.node.parent.getComponent(TowerTile);\r\n            let mosters = gainTowerTile.getMonsters();\r\n\r\n            mosters.forEach(moster => {\r\n                let monsterRole = moster.getComponent(RoleBase);\r\n                if (!monsterRole.gain) {\r\n                    let bulletNode = cc.instantiate(gain.getBulletPrefab());\r\n                    moster.addChild(bulletNode);\r\n                    let mosterRoleBase = moster.getComponent(RoleBase);\r\n                    mosterRoleBase.addHp(gain.getHp());\r\n                }\r\n            });\r\n        });\r\n        this.isFight = false;\r\n    }\r\n\r\n    //检测是否有远程攻击\r\n    private checkUpLongRange(towerTile: TowerTile, player: RoleBase) {\r\n\r\n        let longRangeList = [];\r\n        let towerTileMonste = this.node.children[towerTile.getIndex()];\r\n        let towerTiles = towerTileMonste.children;\r\n        for (let i = 0; i < towerTiles.length; i++) {\r\n            let tile = towerTiles[i];\r\n            let towerTileTemp = tile.getComponent(TowerTile);\r\n            if (towerTileTemp && !towerTileTemp.isLock()) {\r\n                if (towerTileTemp.hasMonster()) {\r\n                    let monsters = towerTileTemp.getMonsters();\r\n                    monsters.forEach(monster => {\r\n                        if (monster) {\r\n                            let monsterRole = monster.getComponent(RoleBase);\r\n                            if (monsterRole.longRange) {\r\n                                longRangeList.push(monsterRole);\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        //没有远程攻击怪，测检测是否有补血的怪 \r\n        if (longRangeList.length <= 0) {\r\n            this.checkUpGain(towerTile);\r\n            return;\r\n        }\r\n        let count = 0;\r\n        //远程攻击怪进行攻击\r\n        for (let i = 0; i < longRangeList.length; i++) {\r\n            let longRanger = longRangeList[i];\r\n            let bulletPrefab = longRanger.getBulletPrefab();\r\n            let bulletNode = cc.instantiate(bulletPrefab);\r\n            // let bullet = bulletNode.getComponent(Bullet);\r\n            longRanger.node.addChild(bulletNode);\r\n            let targerPost = bulletNode.parent.convertToNodeSpaceAR(player.node.parent.convertToWorldSpaceAR(player.node.position));\r\n            targerPost.y += 75;\r\n\r\n            \r\n            //let radian = Math.atan((player.node.y - targerPost.y) / (player.node.x - targerPost.x));\r\n            //let angle = radian * 180 / Math.PI;\r\n            //let theangle = Math.atan2(player.node.y - targerPost.y, player.node.x - targerPost.x);\r\n            //let angle = theangle * 180 / Math.PI ;\r\n            //bulletNode.angle = angle;\r\n\r\n            let orientationX = player.node.x - targerPost.x;\r\n            let orientationY = player.node.y - targerPost.y;\r\n            let dir = cc.v2(orientationX, orientationY);\r\n            let angle2 = dir.signAngle(cc.v2(0, 1));\r\n            let olj = angle2 / Math.PI * 180;\r\n            bulletNode.rotation = olj;\r\n\r\n\r\n            cc.tween(bulletNode).to(0.1 * i + 0.3, { position: targerPost }).removeSelf().call(() => {\r\n                if (this.isDie) {\r\n                    return;\r\n                }\r\n                SoundManager.getInstance().playEffect(SoundManager.attack);\r\n           \r\n                count++;\r\n                //角色掉血\r\n                player.subHp(longRanger.getHp(), (die) => {\r\n                    if (die) {//角色死亡\r\n                        this.isDie = die;\r\n                        this.gameLose();//弹出游戏结束\r\n                        player.death(() => {\r\n                            player.node.y += 20;\r\n                        });\r\n                    }\r\n                });\r\n                //角色不死，检测补血怪\r\n                if (count == longRangeList.length) {\r\n                    this.checkUpGain(towerTile);\r\n                }\r\n            }).start();\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    //获得蛋，创建宠物\r\n    public addEgg(role1: RoleBase, role2: RoleBase,  cb?: Function){\r\n        if (role2.egg) {\r\n            //创建宠物\r\n            role2.eggAppear(role1,cb);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    //攻击\r\n    private attack(role1: RoleBase, role2: RoleBase, posCache,towerTile: TowerTile){   \r\n         if(role1.isPets()){//有宠物，宠物先攻击\r\n            let pets = role1.getPets();\r\n            if(pets){\r\n                role1.idle();\r\n                pets.attack(()=>{\r\n                    pets.idle();//攻击完返回待机\r\n                    this.attacked(role1, role2, posCache, towerTile);\r\n                });\r\n            } \r\n            return;\r\n        }\r\n\r\n        //没有宠物，角色攻击\r\n        role1.attack(() => {\r\n\r\n            role1.idle();\r\n            this.attacked(role1, role2, posCache, towerTile);\r\n            if (!role2.longRange) {//不是远程怪物\r\n                if (role1.getHp() <= role2.getHp()) {\r\n                    role2.attack(() => {//播放怪物攻击动画\r\n                        role2.idle();//播放后进入待机   \r\n                    });\r\n                }             \r\n            }\r\n           \r\n        });\r\n\r\n        this.scheduleOnce(function () { SoundManager.getInstance().playEffect(SoundManager.attack); }, 0.5);        \r\n    }\r\n\r\n    //计算血量\r\n    public calculationHp(role1: RoleBase, role2: RoleBase, towerTile: TowerTile, cb?: Function) {\r\n        if(this.addEgg(role1,role2,cb)){//如果是蛋，创建宠物\r\n            return ;\r\n        }\r\n        let remove = () => {\r\n            SoundManager.getInstance().playEffect(SoundManager.ClaimSword);\r\n            role2.node.removeFromParent();\r\n            if (cb) {\r\n                cb(false);\r\n            }\r\n        }\r\n        if (role2.hasItem) {//如果有道具\r\n\r\n            if (role2.isBox) {\r\n                role2.boxAction(() => { remove(); });\r\n                \r\n                return;\r\n            }\r\n\r\n            if (role2.isWeapon) {\r\n                role1.addHp(role2.getHp());\r\n                role1.loadSpAin(role2.GetWeaponID());\r\n                role1.idle();\r\n                remove();\r\n                return;\r\n            }\r\n\r\n            if (role2.shield) {//道具为盾，增加一个盾血条\r\n                role1.setShieldHp(role2.getHp());\r\n                remove();//移除盾\r\n                return;\r\n            }\r\n            //否则为大宝刀或大宝剑，角色加血\r\n            role1.addHp(role2.getHp());\r\n            remove();\r\n            if (role1.getHp() <= 0) {\r\n                //角色播放死亡动画\r\n                role1.death(() => {\r\n                    if (cb) {\r\n                        cb(true);\r\n                    }\r\n                });\r\n            }\r\n            return;\r\n        }\r\n\r\n        let targerHp = role2.getHp();\r\n        //角色血量大于怪物或者存在盾或者宠物时\r\n        if (role2.isPrincess()) {\r\n            if (cb) {\r\n                cb(false);\r\n            }\r\n        }\r\n        else if (role1.compareHp(targerHp) || role1.getShieldHp() > 0 || role1.isPets()) {\r\n            this.playerAttack(role1, role2, towerTile, cb);\r\n        } else {//否则角色掉血\r\n            role1.subHp(role2.getHp(), (die, shield) => {\r\n                if (die) {//角色是否死亡\r\n\r\n                    if (!shield) {\r\n                        if (role2.type == RoleType.PLAYER) {\r\n                            role2.addHp(role1.getMaxHp());\r\n                        }\r\n                    }\r\n                    //角色播放死亡动画\r\n                    role1.death(() => {\r\n                        if (cb) { \r\n                            cb(die);\r\n                        }\r\n                    });\r\n                } else {\r\n                    if (cb) {\r\n                        cb(die);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    private eggLongAttack(role1: RoleBase, role2: RoleBase,cb?:Function){\r\n        let bulletPrefab = role1.getBulletPrefab();\r\n        let bulletNode = cc.instantiate(bulletPrefab);\r\n        // let bullet = bulletNode.getComponent(Bullet);\r\n        bulletNode.y+=320;\r\n        bulletNode.x+=50;\r\n        role1.node.addChild(bulletNode);\r\n        let targerPost = bulletNode.parent.convertToNodeSpaceAR(role2.node.parent.convertToWorldSpaceAR(role2.node.position));\r\n        let radian = Math.atan((role2.node.y - targerPost.y) / (role2.node.x - targerPost.x));\r\n        let angle = radian * 180 / Math.PI;\r\n        bulletNode.angle = angle;\r\n        targerPost.y +=75;\r\n        cc.tween(bulletNode).to(0.2, { position: targerPost }).removeSelf().call(() => {\r\n          \r\n            SoundManager.getInstance().playEffect(SoundManager.attack);\r\n            if(cb){\r\n                cb();\r\n            }\r\n        }).start();\r\n    }\r\n\r\n    //角色攻击\r\n    private playerAttack(role1: RoleBase, role2: RoleBase, towerTile: TowerTile, cb?: Function) {\r\n        let goPlayerAttack=()=>{\r\n            role2.subHp(role1.getHp(), (die, shield) => {\r\n                if (die) {//物怪物死了\r\n                    role2.death(() => {\r\n                        if (!shield) {\r\n                            role1.addHp(role2.getMaxHp());\r\n                        }\r\n                        towerTile.removeMonster();\r\n                        if (cb) {\r\n                            cb(false);\r\n                        }\r\n                    });\r\n                } else {//物怪物没死，需要攻击\r\n                    this.monsterAttak(role1, role2, cb);\r\n                }\r\n            });\r\n        }\r\n        if (role1.isPets()) {//有宠物，宠物先攻击\r\n            let pets = role1.getPets();\r\n            if (pets) {\r\n                this.eggLongAttack(pets, role2, () => {\r\n                    role2.subHp(pets.getHp(), (die, shield) => {\r\n                        if (die) {//物怪物死了\r\n                            role2.death(() => {\r\n                                if (!shield) {\r\n                                    role1.addHp(role2.getMaxHp());\r\n                                }\r\n                                towerTile.removeMonster();\r\n                                if (cb) {\r\n                                    cb(false);\r\n                                }\r\n                            });\r\n                        } else {//物怪物没死，角色再攻击\r\n                            SoundManager.getInstance().playEffect(SoundManager.attack);\r\n                            role1.attack(() => {\r\n                                role1.idle();\r\n                                goPlayerAttack();\r\n                            });\r\n\r\n                        }\r\n                    }, true);\r\n                });\r\n            }\r\n            return;\r\n        }\r\n        else {\r\n            goPlayerAttack();\r\n        }\r\n    }\r\n\r\n    //怪物攻击\r\n    private monsterAttak(role1: RoleBase, role2: RoleBase, cb?: Function) {\r\n        SoundManager.getInstance().playEffect(SoundManager.attack);\r\n        role2.attack(() => {\r\n            role2.idle();\r\n            //角色掉血\r\n            role1.subHp(role2.getHp(), (die, shield) => {\r\n                if (die) {//角色死亡\r\n                    if (!shield) {\r\n                        role2.addHp(role1.getMaxHp());\r\n                    }\r\n                    //角色播放死亡动画\r\n                    role1.death(() => {\r\n                        if (cb) {//回调死亡处理\r\n                            cb(die);\r\n                        }\r\n                    });\r\n                } else {\r\n                    if (cb) {\r\n                        cb(die);\r\n                    }\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    //解锁锁定的格子\r\n    private checkOpenCloseTile(towerTile: TowerTile) {\r\n\r\n        let towerTileMonste = this.node.children[towerTile.getIndex()];\r\n        let index = towerTileMonste.children.indexOf(towerTile.node);\r\n        let length = towerTileMonste.children.length;\r\n   \r\n        let firstLock = null;\r\n        let firstLockIndex = -1;\r\n        for (let i = 0; i < length; i++) {\r\n            let node = towerTileMonste.children[i];\r\n            if (node) {\r\n                let tile = node.getComponent(TowerTile);\r\n                if (tile && tile.isLock()) {\r\n                    firstLock = tile;\r\n                    firstLockIndex = i;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        //如果锁的位置排第3，则解锁\r\n        if (firstLockIndex > 3 && firstLock) {\r\n            firstLock.unLock();\r\n        }\r\n\r\n    }\r\n    //获取空格子的塔楼\r\n    private CheckTowerNull(towerTile: TowerTile) {\r\n        let towerTileMonste = this.node.children[towerTile.getIndex()];\r\n        let towerTiles = towerTileMonste.children;\r\n        let hasMonster = null;\r\n        for (let i = 1; i < towerTiles.length - 1; i++) {\r\n            let tile = towerTiles[i].getComponent(TowerTile);\r\n            if (tile.hasMonster() || tile.hasItem() || tile.isPrincess()) {\r\n             \r\n            }\r\n            else {\r\n                hasMonster = tile;\r\n                break;\r\n            }\r\n        }\r\n        return hasMonster;\r\n    }\r\n\r\n    //是否只剩一个格子，并且没怪了\r\n    private checkUpTowerHasMonster(towerTile: TowerTile) {\r\n        if (towerTile.hasItem()) {\r\n            return true;\r\n        }\r\n        let towerTileMonste = this.node.children[towerTile.getIndex()];\r\n        let towerTiles = towerTileMonste.children;\r\n        let hasMonster = false;\r\n        for (let i = 1; i < towerTiles.length - 1; i++) {\r\n            let tile = towerTiles[i].getComponent(TowerTile);\r\n            if (tile.hasMonster() || tile.hasItem() || tile.GetIsPriences()) {\r\n                hasMonster = true;\r\n                break;\r\n            }\r\n        }\r\n        return hasMonster;\r\n    }\r\n\r\n    //检查格子怪物是否打完\r\n    private checkUpTowerMonster(towerTile: TowerTile) {\r\n        //没怪物了，塔消失，玩家塔增加\r\n        let towerTileMonste = this.node.children[towerTile.getIndex()];\r\n        let index = towerTileMonste.children.indexOf(towerTile.node);\r\n        let length = towerTileMonste.children.length;\r\n\r\n        cc.tween(towerTile.node).to(0.5, { scale: 0.1 }).removeSelf().call(() => {\r\n            //this.checkUpIsLock(towerTileMonste);//格子移动完成后，检测是否有锁格子需要解锁\r\n            this.moveSelfTile = false;\r\n        }).start();\r\n\r\n        //格子没怪物了，格子向下移动\r\n        for (let i = length - 1; i > 0; i--) {\r\n            let targer = towerTileMonste.children[i];\r\n            if (i > index) {\r\n                let targetPos1 = new cc.Vec3(targer.x, targer.y - this.towerTileOffsetY, 0);\r\n                cc.tween(targer).to(0.5, { position: targetPos1 }).start();\r\n            }\r\n        }      \r\n    }\r\n\r\n    //有锁的是否要可以解锁\r\n    private checkUpIsLock(towerTileNode: cc.Node) {\r\n        let length = towerTileNode.children.length;\r\n\r\n\r\n        let firstLock = null;\r\n        let firstLockIndex = -1;\r\n        for (let i = 0; i < length; i++) {\r\n            let node = towerTileNode.children[i];\r\n            if (node) {\r\n                let tile = node.getComponent(TowerTile);\r\n                if (tile && tile.isLock()) {\r\n                    firstLock = tile;\r\n                    firstLockIndex = i;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        //如果锁的位置排第3，则解锁\r\n        if (firstLockIndex > 3 && firstLock) {\r\n            firstLock.unLock();\r\n        }\r\n    }\r\n\r\n    //\r\n    private playerChangeTile(player: cc.Node) {\r\n        let towerTilePlayer = this.node.children[this.playerposition];\r\n        let tileIndex = towerTilePlayer.children.indexOf(player.parent);\r\n        if (towerTilePlayer.children.length > 3 && tileIndex > 2) {\r\n            let child = towerTilePlayer.children[tileIndex - 1];\r\n            player.removeFromParent();\r\n            player.y = child.y - 70;\r\n            player.parent = child;\r\n        }\r\n    }\r\n\r\n    //玩家回程格子,永远在第3格\r\n    private playerReturnPosition(player: cc.Node) {\r\n        //let towerTilePlayer = this.node.children[this.playerposition];\r\n        //let tileIndex = towerTilePlayer.children.indexOf(player.parent);\r\n        //if (towerTilePlayer.children.length > 3 && tileIndex > 2) {\r\n        //    let position = cc.v3(player.x, player.y - this.towerTileOffsetY * 2 - 100, 0)//let position = cc.v3(player.x, player.y - this.towerTileOffsetY * 2, 0)\r\n        //    return position;\r\n        //}\r\n        return player.position;\r\n    }\r\n\r\n    //玩家塔楼增加格子\r\n    private playerAddTowerTile(towerTile, playerRole,isDouble) {\r\n        let towerTileMonste = this.node.children[towerTile.getIndex()];\r\n        let index = towerTileMonste.children.indexOf(towerTile.node);        \r\n\r\n\r\n        let towerTilePlayer = this.node.children[this.playerposition];\r\n        let length = towerTilePlayer.children.length;\r\n\r\n        for (let i = length - 1; i > 0; i--) {\r\n            let targer = towerTilePlayer.children[i];\r\n            let targetPos1 = new cc.Vec3(targer.x, targer.y + this.towerTileOffsetY, 0);\r\n            cc.tween(targer).to(0.5, { position: targetPos1 }).start();\r\n        }        \r\n\r\n        //var y = towerTile.node.position.y - this.towerTileOffsetY;\r\n\r\n\r\n        let targetPos2 = new cc.Vec3(playerRole.node.position.x, playerRole.node.position.y - this.towerTileOffsetY * 2 * isDouble , 0); //\r\n        cc.tween(playerRole.node).to(0.5, { position: targetPos2 }).start();\r\n\r\n        let tile = cc.instantiate(this.towerTilePrefab);\r\n        tile.scale = 0;\r\n        tile.position = new cc.Vec3(0, -75, 0);\r\n        tile.parent = towerTilePlayer;\r\n        tile.getComponent(TowerTile).initData(this.playerposition, null, null);\r\n        let tileIndex = towerTilePlayer.children.indexOf(tile);\r\n        //把新加的放到最下\r\n        let tempTile = towerTilePlayer.children[tileIndex];\r\n        towerTilePlayer.children.splice(1, 0, tempTile);\r\n        towerTilePlayer.children.splice(tileIndex + 1, 1);\r\n        SoundManager.getInstance().playEffect(SoundManager.Level_UP);\r\n        cc.tween(tile).to(0.5, { scale: 0.5 }).call(() => {\r\n            // this.isFight = false;\r\n            //this.checkUpLongRange(towerTile, playerRole);\r\n            // this.checkUpGain(towerTile);\r\n\r\n\r\n        }).start();\r\n    }\r\n\r\n    //把角色添加到新的格子上，并去从旧的格子上移除\r\n    private playerAddLastTowerTile(towerTile: TowerTile) {\r\n        let player = this.findPlayer();\r\n        let playerTowerTile = player.parent.getComponent(TowerTile);\r\n\r\n        let go = () => {\r\n            player.removeFromParent(false);\r\n            \r\n            // player.parent.removeChild(player,false);\r\n            let role = player.getComponent(RoleBase);\r\n            towerTile.addPlayer(player);\r\n\r\n            role.laodAin();\r\n            role.idle();//role.upLevel(); //升级就是为了更改皮肤，由于当前只有一种皮肤，所以去掉升级功能\r\n        }\r\n\r\n\r\n        if (towerTile.getIndex() == playerTowerTile.getIndex()) {\r\n            go();\r\n           // player.y -= 150;  //为啥要减150呢\r\n            return;\r\n        }\r\n        this.curSizeView();\r\n        go();\r\n        this.isMove = true;\r\n        this.moveTowerLayer();\r\n        \r\n\r\n        //GameScence.Instance.flushMoveCount();\r\n    }\r\n\r\n    private curSizeView() {\r\n        this.curSizeIndex--;\r\n        this.playerposition -= 1;\r\n        if (this.curSizeIndex <= 0) {\r\n            this.curSizeIndex = 0\r\n        }\r\n        if (this.playerposition <= 0) {\r\n            this.playerposition = 0\r\n        }\r\n        if (this.curSizeIndex <= 0 && this.playerposition == this.curSizeIndex) {\r\n            this.gameSuccess();\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    //还有塔则向左移动,否则游戏胜利\r\n    private moveTowerLayer(cb?: Function) {\r\n\r\n        if (this.size > 1) {\r\n            this.size -= 1;\r\n            if (this.size < 2) {\r\n               // console.log(\"没塔楼了，游戏胜利\");\r\n               //this.gameSuccess();\r\n                this.isMove = false;\r\n                if (cb) {\r\n                    cb();\r\n                }\r\n                return;\r\n            }\r\n            SoundManager.getInstance().playEffect(SoundManager.Level_UP);\r\n            cc.tween(this.node).by(0.1, { position: cc.v3(-this.getTowerOffsetX(), 0, 0) }).call(() => {\r\n                this.isMove = false;\r\n                if (cb) {\r\n                    cb();\r\n                }\r\n            }).start();\r\n        } else {//没怪了，游戏胜利\r\n            this.isMove = false;\r\n            if (cb) {\r\n                cb();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 游戏失败\r\n     */\r\n    private gameLose(){\r\n        this.loseNode.active = true;\r\n        this.isDie = true;\r\n        SoundManager.getInstance().playEffect(SoundManager.Lose_Jingle);\r\n    }\r\n\r\n    /**\r\n     * 游戏胜利\r\n     */\r\n    private gameSuccess() {\r\n        let player = this.findPlayer();\r\n        if (player) {\r\n\r\n            this.caidaiAni.node.active = true;\r\n            this.caidaiAni.node.parent = player.parent;\r\n            this.caidaiAni.node.setPosition(player.position.x, player.position.y + 100);\r\n            SpineManager.getInstance().playSpinAnimation(this.caidaiAni, \"caidai\", false, () => {\r\n                this.caidaiAni.node.active = false;\r\n                this.successNode.active = true;\r\n\r\n                this.successNode.setScale(0, 0);\r\n                this.successNode.runAction(cc.scaleTo(0.2, 1, 1));    \r\n\r\n                SoundManager.getInstance().playEffect(SoundManager.Success_jingle);\r\n                this.sendFireMsg();\r\n            });\r\n            \r\n        }\r\n        else {\r\n            this.successNode.active = true;\r\n\r\n\r\n\r\n            SoundManager.getInstance().playEffect(SoundManager.Success_jingle);\r\n        }    \r\n    }\r\n\r\n\r\n    private sendFireMsg() {\r\n        let levelCount = LevelData.curLevel - 1;\r\n        switch (levelCount) {\r\n            case 0:\r\n                FirebaseReport.reportInformation(FirebaseKey.level_wancheng_0);\r\n                break;\r\n            case 1:\r\n                FirebaseReport.reportInformation(FirebaseKey.level_wancheng_1);\r\n                break;\r\n            case 2:\r\n                FirebaseReport.reportInformation(FirebaseKey.level_wancheng_2);\r\n                break;\r\n            case 3:\r\n                FirebaseReport.reportInformation(FirebaseKey.level_wancheng_3);\r\n                break;\r\n            case 4:\r\n                FirebaseReport.reportInformation(FirebaseKey.level_wancheng_4);\r\n                break;\r\n            case 5:\r\n                FirebaseReport.reportInformation(FirebaseKey.level_wancheng_5);\r\n                break;\r\n            case 10:\r\n                FirebaseReport.reportInformation(FirebaseKey.level_wancheng_10);\r\n                break;\r\n            case 15:\r\n                FirebaseReport.reportInformation(FirebaseKey.level_wancheng_15);\r\n                break;\r\n            case 20:\r\n                FirebaseReport.reportInformation(FirebaseKey.level_wancheng_20);\r\n                break;\r\n        }\r\n    }\r\n\r\n    //塔角\r\n    private addFloor() {\r\n        let floor = cc.instantiate(this.towerFloorPrefab);\r\n        floor.position = new cc.Vec3(0, -110, 0);\r\n        return floor;\r\n    }\r\n\r\n    //塔顶\r\n    private addRoof(index) {\r\n        let foofr = cc.instantiate(this.towerRoofPrefab);\r\n        foofr.position = new cc.Vec3(0, 30 + this.towerTileOffsetY + (index - 1) * this.towerTileOffsetY, 0);;\r\n        return foofr;\r\n    }\r\n    // update (dt) {}\r\n\r\n    //塔的排数\r\n    public getSize() {\r\n        return this.size;\r\n    }\r\n\r\n    //塔楼间隔\r\n    public getTowerOffsetX() {\r\n        return this.towerOffsetX;\r\n    }\r\n    talkStrs: string[] = [\"Tap that room to attack the weak enemy first\", \"She is mine,HEHE!!\", \"NO!!!\"];\r\n    talkIndex: number = 0;\r\n    //剧情对话\r\n    private SetTalkInfo(targetNode: cc.Node): void {\r\n        if (!targetNode) {\r\n            return;\r\n        }\r\n        var lable = this.talkNode.getChildByName(\"txt_talklable\").getComponent(cc.Label);\r\n        lable.string = this.talkStrs[this.talkIndex];\r\n        if (this.talkIndex == 0) {\r\n            FirebaseReport.reportAdjustParam(\"k5yc73\");\r\n        }\r\n        else if (this.talkIndex == 2) {\r\n            FirebaseReport.reportAdjustParam(\"98v4ap\");\r\n        }\r\n        this.talkIndex++;\r\n        this.talkNode.active = true;\r\n        this.talkNode.setScale(1, 0);\r\n        this.talkNode.runAction(cc.scaleTo(0.3, 1, 1));    \r\n\r\n\r\n        let targerPost = this.talkNode.parent.convertToNodeSpaceAR(targetNode.parent.convertToWorldSpaceAR(targetNode.position));\r\n        targerPost.y += 110;\r\n        targerPost.x += 90;\r\n        //cc.tween(this.talkNode).to( 0.3, { position: targerPost }).call(() => {\r\n\r\n        //}).start();\r\n        this.talkNode.setPosition(targerPost);\r\n    }\r\n\r\n    private HideTalkInfo(callback: Function = null) {\r\n        if (this.talkNode.active) {\r\n            var sp = cc.sequence(cc.scaleTo(0.3, 1, 0), cc.callFunc(() => {\r\n                this.talkNode.active = false;\r\n                if (callback != null) {\r\n                    callback();\r\n                }\r\n            }));\r\n            this.talkNode.runAction(sp);  \r\n        }         \r\n    }\r\n\r\n    //魔王来袭\r\n    private DevilsAni(callback: Function = null) {\r\n        let tempNode = cc.instantiate(PrefabsManager.getInstance().monsterPrefabList[\"Devils\"])\r\n        this.node.addChild(tempNode, 10, \"mowang\")\r\n        tempNode.setPosition(-380, 100);\r\n        var princess = this.findPrincess();\r\n       /* tempNode.setScale(0.35 * 0.5, 0.35 * 0.5);*/\r\n        let targerPost = tempNode.parent.convertToNodeSpaceAR(princess.parent.convertToWorldSpaceAR(princess.position));\r\n        let tempY = 50\r\n        targerPost.y += tempY;\r\n        var mowang = tempNode.getChildByName(\"mowang\");\r\n        var ani = mowang.getComponent(sp.Skeleton);\r\n        var pani = princess.getComponent(sp.Skeleton);\r\n        mowang.setScale(0.35 * 0.5, 0.35 * 0.5);\r\n\r\n        var func = () => {\r\n            SpineManager.getInstance().playSpinAnimation(ani, \"mfeixing\", true);\r\n            SpineManager.getInstance().playSpinAnimation(pani, \"nfeixing\", true);\r\n            targerPost.x = 400;\r\n            targerPost.y = 100;\r\n            \r\n            cc.tween(tempNode).to(1.5, { position: targerPost }).call(() => {\r\n                var player = this.findPlayer();\r\n                this.SetTalkInfo(player);\r\n                this.scheduleOnce(() => { this.HideTalkInfo(callback); }, 2);\r\n                tempNode.removeFromParent();\r\n                tempNode.destroy();\r\n                FirebaseReport.reportAdjustParam(FirebaseKey.adjust_level_2);\r\n                FirebaseReport.reportAdjustParam(FirebaseKey.G8adjust_level_2);\r\n            }).start();\r\n        };\r\n\r\n\r\n        SpineManager.getInstance().playSpinAnimation(ani, \"mfeixing\", true);\r\n        cc.tween(tempNode).to(0.8, { position: targerPost }).call(() => {\r\n            SpineManager.getInstance().playSpinAnimation(ani, \"mdaiji\", true);\r\n            this.SetTalkInfo(mowang);\r\n            princess.setParent(tempNode);\r\n            //tempNode.addChild(princess, 10, \"princess\")\r\n            princess.setScale(0.35 * 0.5, 0.35 * 0.5);\r\n            princess.setPosition(0, -tempY);\r\n\r\n            this.scheduleOnce(() => { this.HideTalkInfo(func); }, 2);\r\n        }).start();\r\n        \r\n\r\n    }\r\n    \r\n}\r\n"]}