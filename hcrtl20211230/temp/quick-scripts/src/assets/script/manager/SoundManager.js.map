{"version":3,"sources":["assets\\script\\manager\\SoundManager.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import BaseInstanceClass from \"../manager/BaseInstanceClass\";\r\n\r\n/**\r\n * 声音管理类\r\n */\r\nexport class SoundManager extends BaseInstanceClass {\r\n    private soundList = {};                    //声音列表\r\n    private soundActList = {};                  //动作列表\r\n    private actChannelList = {};                //动作音道列表\r\n\r\n    private EffectAudioID: number;//音效的ID\r\n    private bgmChannelID: number;     //背景音声道\r\n    private clockChannelID: number;    //闹铃音声道\r\n    private actchannelID: number;      //动作音道\r\n    private actSound: cc.AudioClip;//动作声音\r\n    private _allowPlayEffect: boolean = true;   //是否允许播放音效\r\n    private _allowPlayBGM: boolean = true;      //是否允许播放背景音乐\r\n    private _effectVolume: number = 1;          //音效音量\r\n    private _bgmVolume: number = 1;             //背景音量\r\n    private _currBgmName: string = '';\r\n\r\n    public static bg: string = \"bg\";          //背景音乐\r\n\r\n    public static ClaimSword: string = \"ClaimSword~1\";        \r\n    public static Collect_blood: string = \"Collect_blood~1\";     \r\n    public static Explode: string = \"Explode~1\";     \r\n    public static HeroDie: string = \"HeroDie~1\";\r\n    public static Level_UP: string = \"Level_UP~1\";\r\n    public static Lose_Jingle: string = \"Lose_Jingle~1\";\r\n    public static attack: string = \"Slash~1\";\r\n    public static Success_jingle: string = \"Success_jingle~1\";\r\n\r\n\r\n\r\n\r\n    public constructor() {\r\n        super();\r\n    }\r\n\r\n    /**将牌值转换未音效名 */\r\n    private changeCardValue(cardValue) {\r\n        return\r\n    }\r\n\r\n    /**\r\n     * 播放音效\r\n     * @param soundName 声音名\r\n     * @param loops 循环次数\r\n     */\r\n    public playEffect(soundName: string, loops: boolean = false) {\r\n        if (!this.allowPlayEffect) {\r\n            return;\r\n        }\r\n        //从声音列表中获取,声音列表中不存在，则从加载资源中获取\r\n        var sound: cc.AudioClip = this.soundList[soundName];\r\n\r\n        if (sound == null) {\r\n            cc.loader.loadRes(\"sound/\" + soundName, cc.AudioClip, (err, audioClip) => {\r\n                console.log(\"==>\" + typeof audioClip);\r\n                this.soundList[soundName] = audioClip;\r\n                this.EffectAudioID = cc.audioEngine.playEffect(audioClip, loops);\r\n                cc.audioEngine.setVolume(this.EffectAudioID, this._effectVolume);\r\n            });\r\n        }\r\n        else {\r\n            this.EffectAudioID = cc.audioEngine.playEffect(sound, loops);\r\n            cc.audioEngine.setVolume(this.EffectAudioID, this._effectVolume);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 停止播放音效\r\n     */\r\n    public stopEffect() {\r\n        cc.audioEngine.stopAllEffects();\r\n        // if (!this.EffectAudioID) return;\r\n        // cc.audioEngine.stopEffect(this.EffectAudioID)\r\n    }\r\n\r\n    private videoEffect: boolean = false;\r\n    private videoMusic: boolean = false;\r\n    /**观看视频音量关闭 */\r\n    public VideoStartStop() {\r\n        this.videoEffect = this._allowPlayEffect;\r\n        this.videoMusic = this._allowPlayBGM;\r\n        this._allowPlayEffect = false;\r\n        this.stopBGM();\r\n    }\r\n\r\n    /**观看视频音量开启*/\r\n    public VideoEndOpen() {\r\n        if (this.videoMusic) {\r\n            if (this._currBgmName != '') this.playBGM(this._currBgmName);\r\n        }\r\n        this._allowPlayEffect = this.videoEffect;\r\n    }\r\n\r\n    /**\r\n     * 播放背景音乐\r\n     * @param bgmName 背景音名\r\n     * @param startTime 播放起始位置\r\n     * @param loops 循环次数\r\n     */\r\n    public playBGM(bgmName: string = \"\", loops: boolean = true) {\r\n        if (this.allowPlayBGM == false) {// || this.bgmChannelID != null\r\n            return;\r\n        }\r\n        this._currBgmName = bgmName;\r\n        this.stopBGM();\r\n        console.log('播放背景音乐：bgmName', bgmName)\r\n        var bgm: cc.AudioClip = this.soundList[bgmName];\r\n        if (bgm == null) {\r\n            cc.loader.loadRes(\"sound/\" + bgmName, cc.AudioClip, (err, audioClip) => {\r\n                console.log(\"==>\" + typeof audioClip);\r\n                this.soundList[bgmName] = audioClip;\r\n                // this.bgmChannelID = cc.audioEngine.play(audioClip, loops,this._bgmVolume);\r\n                this.bgmChannelID = cc.audioEngine.playMusic(audioClip, loops);\r\n                cc.audioEngine.setVolume(this.bgmChannelID, this._bgmVolume);\r\n            });\r\n        }\r\n        if (bgm) {\r\n            this.bgmChannelID = cc.audioEngine.playMusic(bgm, loops);\r\n            cc.audioEngine.setVolume(this.bgmChannelID, this._bgmVolume);\r\n        }\r\n\r\n    }\r\n\r\n    /**停止背景音乐*/\r\n    public stopBGM() {\r\n        // if (this.bgmChannelID) {\r\n        cc.audioEngine.stopMusic();\r\n        // cc.audioEngine.stop(this.bgmChannelID);\r\n        this.bgmChannelID = null;\r\n        // }\r\n    }\r\n\r\n\r\n    /**停止背景音乐*/\r\n    public stopClock() {\r\n        if (this.clockChannelID) {\r\n            cc.audioEngine.stop(this.clockChannelID);\r\n            this.clockChannelID = null;\r\n        }\r\n    }\r\n\r\n    /**获取是否允许播放音效*/\r\n    public get allowPlayEffect() {\r\n        return this._allowPlayEffect;\r\n    }\r\n\r\n    /**设置是否允许播放音效*/\r\n    public set allowPlayEffect(bAllow: boolean) {\r\n        this._allowPlayEffect = bAllow;\r\n    }\r\n\r\n    /**获取是否允许播放背景音*/\r\n    public get allowPlayBGM() {\r\n        return this._allowPlayBGM;\r\n    }\r\n\r\n    /**设置是否允许播放背景音*/\r\n    public set allowPlayBGM(bAllow: boolean) {\r\n        this._allowPlayBGM = bAllow;\r\n        if (this._allowPlayBGM == false) {\r\n            this.stopBGM();\r\n        } else {\r\n            this.playBGM(SoundManager.bg);\r\n        }\r\n    }\r\n\r\n    /**获取音效音量*/\r\n    public get effectVolume() {\r\n        return this._effectVolume;\r\n    }\r\n\r\n    /**设置音效音量*/\r\n    public set effectVolume(value: number) {\r\n        this._effectVolume = value;\r\n    }\r\n\r\n    /**获取BGM音量*/\r\n    public get bgmVolume() {\r\n        return this._bgmVolume;\r\n    }\r\n\r\n    /**设置BGM音量*/\r\n    public set bgmVolume(value: number) {\r\n        this._bgmVolume = value;\r\n        if (this.bgmChannelID) {\r\n            cc.audioEngine.setVolume(this.bgmChannelID, this._bgmVolume);\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n"]}