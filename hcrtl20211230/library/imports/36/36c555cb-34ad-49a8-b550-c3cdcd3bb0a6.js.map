{"version":3,"sources":["assets\\script\\gameScence\\TowerLayer.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\n\nimport PrefabsManager from \"../manager/PrefabsManager\";\nimport { SoundManager } from \"../manager/SoundManager\";\nimport SpineManager from \"../manager/SpineManager\";\r\nimport Bullet from \"./Bullet\";\nimport GameScence from \"./GameScence\";\nimport RoleBase, { RoleType } from \"./RoleBase\";\nimport TowerTile from \"./TowerTile\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class TowerLayer extends cc.Component {\n\n    @property(cc.Node)\n    loseNode: cc.Node = null;//游戏失败\n    @property(cc.Node)\n    successNode: cc.Node = null;//游戏胜利\n\n\n    @property(cc.Prefab)\n    towerFloorPrefab: cc.Prefab = null;//塔底\n\n    @property(cc.Prefab)\n    towerRoofPrefab: cc.Prefab = null;//塔顶\n\n    @property(cc.Prefab)\n    towerTilePrefab: cc.Prefab = null;//塔格子prefab\n\n    @property(cc.Prefab)\n    towerPrefab: cc.Prefab = null;//塔每一栋\n\n    private towerOffsetX = 350;\n    private towerTileOffsetY = 150;\n\n    private playerposition = 0;\n\n    private size = 0;\n    private isMove = false;\n    private isFight = false;\n    private isDie = false;\n    @property(sp.Skeleton)\n    caidaiAni: sp.Skeleton = null;\n    @property(cc.Node)\n    public weaponIcon: cc.Node = null;\n\n\n    onLoad() {\n\n    }\n\n    start() {\n    }\n    //初始化塔楼\n    init(towerData) {\n        this.isMove = false;\n        this.isFight = false;\n        this.isDie = false;\n        this.size = towerData.length;\n        let i = 0;\n        for (let i = towerData.length - 1; i >= 0; i--) {\n            let element = towerData[i];\n            if (element) {\n                let tempNodeParent = cc.instantiate(this.towerPrefab);\n                tempNodeParent.setPosition(cc.v2(-148.936 + i * this.towerOffsetX, -410));\n                let data = element.data;\n                this.node.addChild(tempNodeParent);\n                let end = 0;\n                tempNodeParent.addChild(this.addFloor());//塔底\n                for (let j = 0; j < data.length; j++) {//塔身\n                    let element1 = data[j];\n                    let tile = cc.instantiate(this.towerTilePrefab);\n                    tile.position = new cc.Vec3(0, this.towerTileOffsetY / 2 + (j - 1) * this.towerTileOffsetY, 0);\n                    tile.on(cc.Node.EventType.TOUCH_END, this.towerTouch, this);\n                    let towerTile = tile.getComponent(TowerTile);\n                    towerTile.initData(this.node.childrenCount - 1, element1);//初始化塔身数据\n                    tempNodeParent.addChild(tile);\n                    end = j;\n                };\n                tempNodeParent.addChild(this.addRoof(end + 1));//塔顶\n            }\n        };\n        \n        this.findPlayerColumn();\n    }\n\n    //查找角色所在塔楼\n    findPlayerColumn() {\n        let nodeChildren = this.node.children;\n        for (let i = 0; i < nodeChildren.length; i++) {\n            let node = nodeChildren[i].children;\n            for (let j = 0; j < node.length; j++) {\n                let temp = node[j]; \n                if (temp) {\n                    let towerTile = temp.getComponent(TowerTile);\n                    if (towerTile && towerTile.isPlayer()) {\n                        this.playerposition = i;\n                        break;\n                    }\n                }\n            }\n        }\n        //去掉角色塔楼事件\n        let children = this.node.children[this.playerposition].children;\n        for (let i = 0; i < children.length; i++) {\n            let node = children[i];\n            let towerTile = node.getComponent(TowerTile);\n            if (towerTile) {\n                if (towerTile.hasItem) {\n                    continue;\n                }\n            }\n            node.off(cc.Node.EventType.TOUCH_END, this.towerTouch, this);\n        }\n\n        console.log(\"this.playerposition   \" + this.playerposition);\n    }\n\n    public addPlayerHp(addHp:number):void { \n        let player = this.findPlayer();\n        let playerRole = player.getComponent(RoleBase);\n\n        playerRole.addHp(addHp);\n    }\n\n    public addPlayerAniHp(sprID: number, addHp: number): void {\n        let player = this.findPlayer();\n        let playerRole = player.getComponent(RoleBase);\n        this.weaponIcon.parent = null;\n        this.node.parent.addChild(this.weaponIcon, 100);\n        this.weaponIcon.active = true;\n        this.weaponIcon.setScale(1, 1);\n\n        var spr = this.weaponIcon.getComponent(cc.Sprite);\n\n\n        this.onSetIcon(spr, sprID + \"\");\n        this.weaponIcon.setPosition(0, 0);\n\n\n        //var pos = this.getNodePos(player, this.weaponIcon)\n        let targerPosX = player.position.x / 2 + player.parent.position.x + player.parent.parent.position.x + this.node.position.x;\n        let targerPosY = player.position.y / 2 + player.parent.position.y + player.parent.parent.position.y + this.node.position.y;\r\n\r\n\n        var func = cc.sequence(cc.delayTime(0.5), cc.callFunc(() => {\r\n            this.weaponIcon.runAction(cc.scaleTo(1, 0.3));\r\n        }), cc.moveTo(1, targerPosX, targerPosY), cc.callFunc(() => {\r\n            playerRole.addHp(addHp);\r\n            this.weaponIcon.active = false;\r\n\r\n            let role = player.getComponent(RoleBase);\n            role.loadSpAin(sprID);\n            role.idle();\n\r\n        }))\r\n        this.weaponIcon.runAction(func);\n\n      \n        //console.log(\"addHp------  :\" + addHp);\n\n        //playerRole.addHp(addHp);        \n    }\n   \n    //curNode 待转换的节点 targetNode 目标节点\n    private getNodePos(curNode, targetNode) {\n        var worldPos = curNode.parent.convertToWorldSpaceAR(curNode.position);\n        var pos = targetNode.convertToWorldSpaceAR(worldPos);\n        return pos\n    }\n\n    private onSetIcon(spr: cc.Sprite, iconPath: string) {\r\n        var strPath: string = \"texture/game/weapon/wq\"//\"texture/game/gamepopup/d\";\r\n        strPath = strPath + iconPath;\r\n        cc.loader.loadRes(strPath, cc.SpriteFrame, (err, sp) => {\r\n            spr.spriteFrame = sp as cc.SpriteFrame;\r\n        });\r\n    }\n\n    //查找角色所有格子\n    findPlayer() {\n        let playerColumn = this.node.children[this.playerposition];\n        if (playerColumn) {\n            for (let i = 0; i < playerColumn.children.length; i++) {\n                let playerTile = playerColumn.children[i].getComponent(TowerTile);\n                if (playerTile && playerTile.isPlayer()) {\n                    return playerTile.getPlayer();\n                }\n            }\n        }\n        return null;\n    }\n    curTargetIndex: number = -1; \n    //点击塔楼事件\n    public towerTouch(touch: Event) {            \n        if (this.isMove || this.isFight || this.isDie) {\n            return;\n        }\n\n        let currentTarget = touch.currentTarget as any;//当前点击的格子  \n        \n       \n        let player = this.findPlayer();//找到角色\n\n        if (player) {\n            //获取当前层\n            let towerTile = currentTarget.getComponent(TowerTile);\n\n            if (towerTile) {\n                //如果是角色本身不处理\n                if(towerTile.getPlayer()){\n                    return ;\n                }\n                //如果是销不处理\n                if (towerTile.isLock()) {\n                    return;\n                }\n                let monster = towerTile.getMonster();\n                if (monster == null) {//怪物不存在\n                    monster = towerTile.getItem();//是否存在道具\n                }\n                //不存在怪物与道具不做处理\n                if(monster==null){\n                    return ;\n                }\n                var tempTargetIndex = towerTile.node.uuid//towerTile.getIndex();\n                //计算怪物目标位置\n                let targerPost = player.parent.convertToNodeSpaceAR(monster.parent.convertToWorldSpaceAR(monster.position));\n\n                var isSamePos = false;\n                var isSameAcross = false;\n           \n                if (tempTargetIndex == this.curTargetIndex) {\r\n                    var length = Math.abs(targerPost.x - player.position.x);\r\n                    if (length <= 120) {\r\n                        isSamePos = true;\r\n                    }\r\n                    else {\r\n                        isSameAcross = true;\r\n                    }\r\n                }\n                else {                   \r\n                    this.curTargetIndex = tempTargetIndex;\n                }\n               \n\n                if (Math.abs(targerPost.y - player.position.y) <= 1) {\r\n                    var length = Math.abs(targerPost.x - player.position.x);\r\n                    if (length <= 120) {\r\n                        isSamePos = true;\r\n                    }\r\n                    else  {\r\n                        isSameAcross = true;\r\n                    }\r\n                }\n\n\n                let posCache = this.playerReturnPosition(player);//计算角色返回的位置player.position;\n                let playerRole = player.getComponent(RoleBase);\n                let monsterRole = monster.getComponent(RoleBase);\n                this.isFight = true;\n\n                if (isSamePos) {\r\n                    this.attackedLater(playerRole, monsterRole, posCache, towerTile);\r\n                    return;\r\n                }\n\n                if (isSameAcross) {\r\n                    playerRole.jumpLandTo(targerPost, 100, () => {\r\n                        this.attackedLater(playerRole, monsterRole, posCache, towerTile);\n                    });\r\n                    return;\r\n                }\n\n                //跳向怪物格子\n                playerRole.jumpTo(targerPost, 100, () => {\n                    //if (!monsterRole.hasItem) {//如果不是道具\n                    //    //角色攻击\n                    //   this.attack(playerRole, monsterRole, posCache, towerTile);\n                    //    if (!monsterRole.longRange) {//不是远程怪物\n                    //        monsterRole.attack(() => {//播放怪物攻击动画\n                    //            monsterRole.idle();//播放后进入待机\n                    //        });\n                    //    }\n                    //} else {//格子为道具\n                    //    cc.tween(playerRole.node).delay(0.5).call(() => {\n                    //        this.attacked(playerRole, monsterRole, posCache, towerTile);\n                    //    }).start();\n                    //}\n\n                    //this.playerAddLastTowerTile(towerTile);//把角色添加到新的格子\n\n                    //let player = this.findPlayer();\n                    //player.setParent(towerTile);\n\n                    this.attackedLater(playerRole, monsterRole, posCache, towerTile);\n                });\n            }\n        }\n    }\n    //攻击之后\n    private attackedLater(playerRole, monsterRole, posCache, towerTile) {\n\n        console.log(\"this.playerposition    \" + this.playerposition); \n        console.log(\"this.getIndex    \" + towerTile.getIndex()); \n        if (towerTile.getIndex() != this.playerposition) {\r\n            var til = this.CheckTowerNull(towerTile);\n            if (til) {\n\n                let towerTileMonste = this.node.children[towerTile.getIndex()];\n                let index1 = towerTileMonste.children.indexOf(towerTile.node);\n                let index2 = towerTileMonste.children.indexOf(til.node);\n\n\n                this.checkUpTowerMonster(til);\n                if (index2 < index1)\r\n                    this.playerAddTowerTile(til, playerRole, 2);\n                else\n                    this.playerAddTowerTile(til, playerRole, 1);\n            }\r\n        }\n                \n        if (!monsterRole.hasItem) {\r\n            this.attack(playerRole, monsterRole, posCache, towerTile);\n            if (!monsterRole.longRange) {//不是远程怪物\n                monsterRole.attack(() => {//播放怪物攻击动画\n                    monsterRole.idle();//播放后进入待机\n                });\n            }\r\n        }\n        else {\n            cc.tween(playerRole.node).delay(0.5).call(() => {\n                this.attacked(playerRole, monsterRole, posCache, towerTile);\n            }).start();\n        }\n    }\n\n    //攻击后继动作\n    private attacked(playerRole, monsterRole, posCache, towerTile) {\n        //攻击血量计算\n        this.calculationHp(playerRole, monsterRole, towerTile, (die) => {\n            if (!die) {\n                if (!this.checkUpTowerHasMonster(towerTile)) {//塔楼是否还有怪物\n                    console.log(\"没怪了，计算角色塔楼\");\n                    this.playerAddLastTowerTile(towerTile);//把角色添加到新的格子\n                    this.isFight = false;//战斗结束\n                    this.curTargetIndex = -1;\n                    return;\n                }\n\n                this.isFight = false;\n\n                //角色跳回原来的格子\n                //playerRole.jumpTo(posCache, 0, () => {\n                //怪物塔楼减少\n                playerRole.idle();//playerRole.upLevel();\n                //this.playerChangeTile(playerRole.node);\n                //是否存在怪物或道具\n                this.checkUpLongRange(towerTile, playerRole);\n\n                if (towerTile.hasMonster() || towerTile.hasItem()) {\n                    //是否存在远程攻击怪，有则进行远程攻击\n                        \n                    return;\n                }\n\n                this.checkOpenCloseTile(towerTile);\n                ////检测塔楼怪物\n                //this.checkUpTowerMonster(towerTile);\n                ////角色塔楼增加\n                //this.playerAddTowerTile(towerTile, playerRole)\n                //});\n                return;\n            }\n            else {\r\n                //角色死亡，游戏结束\\\n                this.gameLose();\r\n            }           \n            // this.loseNode.active = true;\n            // SoundManager.getInstance().playEffect(SoundManager.Lose_Jingle);\n        });\n    }\n\n    //检测是否是增益怪\n    private checkUpGain(towerTile: TowerTile) {\n        let gainList = [];\n        let towerTileMonste = this.node.children[towerTile.getIndex()];\n        let towerTiles = towerTileMonste.children;\n        for (let i = 0; i < towerTiles.length; i++) {\n            let tile = towerTiles[i];\n            let towerTileTemp = tile.getComponent(TowerTile);\n            if (towerTileTemp) {\n                if (towerTileTemp.hasMonster()) {\n                    let monsters = towerTileTemp.getMonsters();\n                    monsters.forEach(monster => {\n                        if (monster) {\n                            let monsterRole = monster.getComponent(RoleBase);\n                            if (monsterRole.gain) {\n                                gainList.push(monsterRole);\n                            }\n                        }\n                    });\n                }\n            }\n        }\n\n        //为身边的怪增加血量\n        gainList.forEach(gain => {\n            let gainTowerTile = gain.node.parent.getComponent(TowerTile);\n            let mosters = gainTowerTile.getMonsters();\n\n            mosters.forEach(moster => {\n                let monsterRole = moster.getComponent(RoleBase);\n                if (!monsterRole.gain) {\n                    let bulletNode = cc.instantiate(gain.getBulletPrefab());\n                    moster.addChild(bulletNode);\n                    let mosterRoleBase = moster.getComponent(RoleBase);\n                    mosterRoleBase.addHp(gain.getHp());\n                }\n            });\n        });\n        this.isFight = false;\n    }\n\n    //检测是否有远程攻击\n    private checkUpLongRange(towerTile: TowerTile, player: RoleBase) {\n\n        let longRangeList = [];\n        let towerTileMonste = this.node.children[towerTile.getIndex()];\n        let towerTiles = towerTileMonste.children;\n        for (let i = 0; i < towerTiles.length; i++) {\n            let tile = towerTiles[i];\n            let towerTileTemp = tile.getComponent(TowerTile);\n            if (towerTileTemp && !towerTileTemp.isLock()) {\n                if (towerTileTemp.hasMonster()) {\n                    let monsters = towerTileTemp.getMonsters();\n                    monsters.forEach(monster => {\n                        if (monster) {\n                            let monsterRole = monster.getComponent(RoleBase);\n                            if (monsterRole.longRange) {\n                                longRangeList.push(monsterRole);\n                            }\n                        }\n                    });\n                }\n            }\n        }\n        //没有远程攻击怪，测检测是否有补血的怪 \n        if (longRangeList.length <= 0) {\n            this.checkUpGain(towerTile);\n            return;\n        }\n        let count = 0;\n        //远程攻击怪进行攻击\n        for (let i = 0; i < longRangeList.length; i++) {\n            let longRanger = longRangeList[i];\n            let bulletPrefab = longRanger.getBulletPrefab();\n            let bulletNode = cc.instantiate(bulletPrefab);\n            // let bullet = bulletNode.getComponent(Bullet);\n            longRanger.node.addChild(bulletNode);\n            let targerPost = bulletNode.parent.convertToNodeSpaceAR(player.node.parent.convertToWorldSpaceAR(player.node.position));\n            targerPost.y += 75;\n            let radian = Math.atan((player.node.y - targerPost.y) / (player.node.x - targerPost.x));\n            let angle = radian * 180 / Math.PI;\n            bulletNode.angle = angle;\n\n            cc.tween(bulletNode).to(0.1 * i + 0.3, { position: targerPost }).removeSelf().call(() => {\n                if (this.isDie) {\n                    return;\n                }\n                SoundManager.getInstance().playEffect(SoundManager.attack);\n           \n                count++;\n                //角色掉血\n                player.subHp(longRanger.getHp(), (die) => {\n                    if (die) {//角色死亡\n                        this.isDie = die;\n                        this.gameLose();//弹出游戏结束\n                        player.death(() => {\n                            player.node.y += 20;\n                        });\n                    }\n                });\n                //角色不死，检测补血怪\n                if (count == longRangeList.length) {\n                    this.checkUpGain(towerTile);\n                }\n            }).start();\n        }\n\n    }\n\n    //获得蛋，创建宠物\n    public addEgg(role1: RoleBase, role2: RoleBase,  cb?: Function){\n        if (role2.egg) {\n            //创建宠物\n            role2.eggAppear(role1,cb);\n            return true;\n        }\n        return false;\n    }\n\n    //攻击\n    private attack(role1: RoleBase, role2: RoleBase, posCache,towerTile: TowerTile){   \n         if(role1.isPets()){//有宠物，宠物先攻击\n            let pets = role1.getPets();\n            if(pets){\n                role1.idle();\n                pets.attack(()=>{\n                    pets.idle();//攻击完返回待机\n                    this.attacked(role1, role2, posCache, towerTile);\n                });\n            } \n            return;\n        }\n        SoundManager.getInstance().playEffect(SoundManager.attack);\n        //没有宠物，角色攻击\n        role1.attack(() => {\n            role1.idle();\n            this.attacked(role1, role2, posCache, towerTile);\n        });\n    }\n\n    //计算血量\n    public calculationHp(role1: RoleBase, role2: RoleBase, towerTile: TowerTile, cb?: Function) {\n        if(this.addEgg(role1,role2,cb)){//如果是蛋，创建宠物\n            return ;\n        }\n        let remove = () => {\n            SoundManager.getInstance().playEffect(SoundManager.ClaimSword);\n            role2.node.removeFromParent();\n            if (cb) {\n                cb(false);\n            }\n        }\n        if (role2.hasItem) {//如果有道具\n            if (role2.shield) {//道具为盾，增加一个盾血条\n                role1.setShieldHp(role2.getHp());\n                remove();//移除盾\n                return;\n            }\n            //否则为大宝刀或大宝剑，角色加血\n            role1.addHp(role2.getHp());\n            remove();\n            return;\n        }\n\n        let targerHp = role2.getHp();\n        //角色血量大于怪物或者存在盾或者宠物时\n        if (role1.compareHp(targerHp) || role1.getShieldHp() > 0 || role1.isPets()) {\n            this.playerAttack(role1, role2, towerTile, cb);\n        } else {//否则角色掉血\n            role1.subHp(role2.getHp(), (die, shield) => {\n                if (die) {//角色是否死亡\n\n                    if (!shield) {\n                        if (role2.type == RoleType.PLAYER) {\r\n                            role2.addHp(role1.getMaxHp());\r\n                        }\n                    }\n                    //角色播放死亡动画\n                    role1.death(() => {\n                        if (cb) { \n                            cb(die);\n                        }\n                    });\n                } else {\n                    if (cb) {\n                        cb(die);\n                    }\n                }\n            });\n        }\n    }\n\n    private eggLongAttack(role1: RoleBase, role2: RoleBase,cb?:Function){\n        let bulletPrefab = role1.getBulletPrefab();\n        let bulletNode = cc.instantiate(bulletPrefab);\n        // let bullet = bulletNode.getComponent(Bullet);\n        bulletNode.y+=320;\n        bulletNode.x+=50;\n        role1.node.addChild(bulletNode);\n        let targerPost = bulletNode.parent.convertToNodeSpaceAR(role2.node.parent.convertToWorldSpaceAR(role2.node.position));\n        let radian = Math.atan((role2.node.y - targerPost.y) / (role2.node.x - targerPost.x));\n        let angle = radian * 180 / Math.PI;\n        bulletNode.angle = angle;\n        targerPost.y +=75;\n        cc.tween(bulletNode).to(0.2, { position: targerPost }).removeSelf().call(() => {\n          \n            SoundManager.getInstance().playEffect(SoundManager.attack);\n            if(cb){\n                cb();\n            }\n        }).start();\n    }\n\n    //角色攻击\n    private playerAttack(role1: RoleBase, role2: RoleBase, towerTile: TowerTile, cb?: Function) {\n        let goPlayerAttack=()=>{\n            role2.subHp(role1.getHp(), (die, shield) => {\n                if (die) {//物怪物死了\n                    role2.death(() => {\n                        if (!shield) {\n                            role1.addHp(role2.getMaxHp());\n                        }\n                        towerTile.removeMonster();\n                        if (cb) {\n                            cb(false);\n                        }\n                    });\n                } else {//物怪物没死，需要攻击\n                    this.monsterAttak(role1, role2, cb);\n                }\n            });\n        }\n        if(role1.isPets()){//有宠物，宠物先攻击\n            let pets = role1.getPets();\n            if(pets){\n                this.eggLongAttack(pets,role2,()=>{\n                    role2.subHp(pets.getHp(), (die, shield) => {\n                        if (die) {//物怪物死了\n                            role2.death(() => {\n                                if (!shield) {\n                                    role1.addHp(role2.getMaxHp());\n                                }\n                                towerTile.removeMonster();\n                                if (cb) {\n                                    cb(false);\n                                }\n                            });\n                        } else {//物怪物没死，角色再攻击\n                            SoundManager.getInstance().playEffect(SoundManager.attack);\n                            role1.attack(() => {\n                                role1.idle();\n                                goPlayerAttack();\n                            });\n                         \n                        }\n                    },true);\n                });\n            }\n            return;\n        }\n        goPlayerAttack();\n    }\n\n    //怪物攻击\n    private monsterAttak(role1: RoleBase, role2: RoleBase, cb?: Function) {\n        SoundManager.getInstance().playEffect(SoundManager.attack);\n        role2.attack(() => {\n            role2.idle();\n            //角色掉血\n            role1.subHp(role2.getHp(), (die, shield) => {\n                if (die) {//角色死亡\n                    if (!shield) {\n                        role2.addHp(role1.getMaxHp());\n                    }\n                    //角色播放死亡动画\n                    role1.death(() => {\n                        if (cb) {//回调死亡处理\n                            cb(die);\n                        }\n                    });\n                } else {\n                    if (cb) {\n                        cb(die);\n                    }\n                }\n            });\n        });\n    }\n\n    //解锁锁定的格子\n    private checkOpenCloseTile(towerTile: TowerTile) {\n\n        let towerTileMonste = this.node.children[towerTile.getIndex()];\n        let index = towerTileMonste.children.indexOf(towerTile.node);\n        let length = towerTileMonste.children.length;\n   \n        let firstLock = null;\n        let firstLockIndex = -1;\n        for (let i = 0; i < length; i++) {\n            let node = towerTileMonste.children[i];\n            if (node) {\n                let tile = node.getComponent(TowerTile);\n                if (tile && tile.isLock()) {\n                    firstLock = tile;\n                    firstLockIndex = i;\n                    break;\n                }\n            }\n        }\n        //如果锁的位置排第3，则解锁\n        if (firstLockIndex > 3 && firstLock) {\n            firstLock.unLock();\n        }\n\n    }\n    //获取空格子的塔楼\n    private CheckTowerNull(towerTile: TowerTile) {\n        let towerTileMonste = this.node.children[towerTile.getIndex()];\n        let towerTiles = towerTileMonste.children;\n        let hasMonster = null;\n        for (let i = 1; i < towerTiles.length - 1; i++) {\n            let tile = towerTiles[i].getComponent(TowerTile);\n            if (tile.hasMonster() || tile.hasItem()) {\n             \n            }\n            else {\n                hasMonster = tile;\n                break;\n            }\n        }\n        return hasMonster;\n    }\n\n    //是否只剩一个格子，并且没怪了\n    private checkUpTowerHasMonster(towerTile: TowerTile) {\n        if (towerTile.hasItem()) {\n            return true;\n        }\n        let towerTileMonste = this.node.children[towerTile.getIndex()];\n        let towerTiles = towerTileMonste.children;\n        let hasMonster = false;\n        for (let i = 1; i < towerTiles.length - 1; i++) {\n            let tile = towerTiles[i].getComponent(TowerTile);\n            if (tile.hasMonster() || tile.hasItem() ) {\n                hasMonster = true;\n                break;\n            }\n        }\n        return hasMonster;\n    }\n\n    //检查格子怪物是否打完\n    private checkUpTowerMonster(towerTile: TowerTile) {\n        //没怪物了，塔消失，玩家塔增加\n        let towerTileMonste = this.node.children[towerTile.getIndex()];\n        let index = towerTileMonste.children.indexOf(towerTile.node);\n        let length = towerTileMonste.children.length;\n        //格子没怪物了，格子向下移动\n        for (let i = length - 1; i > 0; i--) {\n            let targer = towerTileMonste.children[i];\n            if (i > index) {\n                let targetPos1 = new cc.Vec3(targer.x, targer.y - this.towerTileOffsetY, 0);\n                cc.tween(targer).to(0.5, { position: targetPos1 }).start();\n            }\n        }\n        cc.tween(towerTile.node).to(0.5, { scale: 0.1 }).removeSelf().call(() => {\n            //this.checkUpIsLock(towerTileMonste);//格子移动完成后，检测是否有锁格子需要解锁\n        }).start();\n\n    }\n\n    //有锁的是否要可以解锁\n    private checkUpIsLock(towerTileNode: cc.Node) {\n        let length = towerTileNode.children.length;\n\n\n        let firstLock = null;\n        let firstLockIndex = -1;\n        for (let i = 0; i < length; i++) {\n            let node = towerTileNode.children[i];\n            if (node) {\n                let tile = node.getComponent(TowerTile);\n                if (tile && tile.isLock()) {\n                    firstLock = tile;\n                    firstLockIndex = i;\n                    break;\n                }\n            }\n        }\n        //如果锁的位置排第3，则解锁\n        if (firstLockIndex > 3 && firstLock) {\n            firstLock.unLock();\n        }\n    }\n\n    //\n    private playerChangeTile(player: cc.Node) {\n        let towerTilePlayer = this.node.children[this.playerposition];\n        let tileIndex = towerTilePlayer.children.indexOf(player.parent);\n        if (towerTilePlayer.children.length > 3 && tileIndex > 2) {\n            let child = towerTilePlayer.children[tileIndex - 1];\n            player.removeFromParent();\n            player.y = child.y - 70;\n            player.parent = child;\n        }\n    }\n\n    //玩家回程格子,永远在第3格\n    private playerReturnPosition(player: cc.Node) {\n        //let towerTilePlayer = this.node.children[this.playerposition];\n        //let tileIndex = towerTilePlayer.children.indexOf(player.parent);\n        //if (towerTilePlayer.children.length > 3 && tileIndex > 2) {\n        //    let position = cc.v3(player.x, player.y - this.towerTileOffsetY * 2 - 100, 0)//let position = cc.v3(player.x, player.y - this.towerTileOffsetY * 2, 0)\n        //    return position;\n        //}\n        return player.position;\n    }\n\n    //玩家塔楼增加格子\n    private playerAddTowerTile(towerTile, playerRole,isDouble) {\n        let towerTileMonste = this.node.children[towerTile.getIndex()];\n        let index = towerTileMonste.children.indexOf(towerTile.node);        \n\n\n        let towerTilePlayer = this.node.children[this.playerposition];\n        let length = towerTilePlayer.children.length;\n\n        for (let i = length - 1; i > 0; i--) {\n            let targer = towerTilePlayer.children[i];\n            let targetPos1 = new cc.Vec3(targer.x, targer.y + this.towerTileOffsetY, 0);\n            cc.tween(targer).to(0.5, { position: targetPos1 }).start();\n        }        \n\n        //var y = towerTile.node.position.y - this.towerTileOffsetY;\n\n\n        let targetPos2 = new cc.Vec3(playerRole.node.position.x, playerRole.node.position.y - this.towerTileOffsetY * 2 * isDouble , 0); //\n        cc.tween(playerRole.node).to(0.5, { position: targetPos2 }).start();\n\n        let tile = cc.instantiate(this.towerTilePrefab);\n        tile.scale = 0;\n        tile.position = new cc.Vec3(0, -75, 0);\n        tile.parent = towerTilePlayer;\n        tile.getComponent(TowerTile).initData(this.playerposition, null);\n        let tileIndex = towerTilePlayer.children.indexOf(tile);\n        //把新加的放到最下\n        let tempTile = towerTilePlayer.children[tileIndex];\n        towerTilePlayer.children.splice(1, 0, tempTile);\n        towerTilePlayer.children.splice(tileIndex + 1, 1);\n        SoundManager.getInstance().playEffect(SoundManager.Level_UP);\n        cc.tween(tile).to(0.5, { scale: 0.5 }).call(() => {\n            // this.isFight = false;\n            //this.checkUpLongRange(towerTile, playerRole);\n            // this.checkUpGain(towerTile);\n\n\n        }).start();\n    }\n\n    //把角色添加到新的格子上，并去从旧的格子上移除\n    private playerAddLastTowerTile(towerTile: TowerTile) {\n        let player = this.findPlayer();\n        let playerTowerTile = player.parent.getComponent(TowerTile);\n\n        let go = () => {\n            player.removeFromParent(false);\n            \n            // player.parent.removeChild(player,false);\n            let role = player.getComponent(RoleBase);\n            towerTile.addPlayer(player);\n\n            role.laodAin();\n            role.idle();//role.upLevel(); //升级就是为了更改皮肤，由于当前只有一种皮肤，所以去掉升级功能\n\n            console.log(\"把角色添加到新的格子上 :\" +role.getHp());\n        }\n\n\n        if (towerTile.getIndex() == playerTowerTile.getIndex()) {\n            console.log(\"角色和怪物在同一列\");\n            go();\n           // player.y -= 150;  //为啥要减150呢\n            return;\n        }\n        go();\n        this.isMove = true;\n        this.moveTowerLayer();\n        this.playerposition -= 1;\n\n        GameScence.Instance.flushMoveCount();\n    }\n\n    //还有塔则向左移动,否则游戏胜利\n    private moveTowerLayer() {\n\n        if (this.size > 1) {\n            this.size -= 1;\n            console.log(\"playerpostion: \" + this.playerposition + \" size: \" + this.size);\n            if (this.size < 2) {\n                console.log(\"没塔楼了，游戏胜利\");\n               this.gameSuccess();\n                return;\n            }\n            SoundManager.getInstance().playEffect(SoundManager.Level_UP);\n            cc.tween(this.node).by(0.1, { position: cc.v3(-this.getTowerOffsetX(), 0, 0) }).call(() => {\n                this.isMove = false;\n            }).start();\n        } else {//没怪了，游戏胜利\n\n        }\n    }\n\n    /**\n     * 游戏失败\n     */\n    private gameLose(){\n        this.loseNode.active = true;\n        SoundManager.getInstance().playEffect(SoundManager.Lose_Jingle);\n    }\n\n    /**\n     * 游戏胜利\n     */\n    private gameSuccess() {\n        let player = this.findPlayer();\n        if (player) {\r\n\r\n            this.caidaiAni.node.active = true;\r\n            this.caidaiAni.node.parent = player.parent;\r\n            this.caidaiAni.node.setPosition(player.position.x, player.position.y + 100);\r\n            SpineManager.getInstance().playSpinAnimation(this.caidaiAni, \"caidai\", false, () => {\r\n                this.caidaiAni.node.active = false;\r\n                this.successNode.active = true;\n                SoundManager.getInstance().playEffect(SoundManager.Success_jingle);\r\n            });\r\n            \r\n        }\n        else {\n            this.successNode.active = true;\n            SoundManager.getInstance().playEffect(SoundManager.Success_jingle);\n        }    \n    }\n\n\n    //塔角\n    private addFloor() {\n        let floor = cc.instantiate(this.towerFloorPrefab);\n        floor.position = new cc.Vec3(0, -110, 0);\n        return floor;\n    }\n\n    //塔顶\n    private addRoof(index) {\n        let foofr = cc.instantiate(this.towerRoofPrefab);\n        foofr.position = new cc.Vec3(0, 30 + this.towerTileOffsetY + (index - 1) * this.towerTileOffsetY, 0);;\n        return foofr;\n    }\n    // update (dt) {}\n\n    //塔的排数\n    public getSize() {\n        return this.size;\n    }\n\n    //塔楼间隔\n    public getTowerOffsetX() {\n        return this.towerOffsetX;\n    }\n}\n"]}