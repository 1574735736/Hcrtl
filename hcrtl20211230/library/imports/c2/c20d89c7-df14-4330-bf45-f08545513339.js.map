{"version":3,"sources":["assets\\script\\util\\ListView.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import ItemRenderer from \"./ItemRenderer\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class ListView extends cc.Component {//本组件中子项在列表中为居中显示\r\n    /**列表子项预制体资源 */\r\n    @property({\r\n        type:cc.Prefab,\r\n        tooltip:\"列表子项预制体资源\"\r\n    })\r\n    itemPrefab:cc.Prefab = null;\r\n\r\n    /**列表子项上挂载的自定义控制脚本类名() */\r\n    @property({\r\n        // type:cc.String,\r\n        tooltip:\"列表子项上挂载的自定义控制脚本类名\"\r\n    })\r\n    itemClassName: string = \"\";\r\n\r\n    /**列表滚动容器 */\r\n    @property({\r\n        type:cc.ScrollView,\r\n        tooltip:\"列表滚动容器\"\r\n    })\r\n    scrollView: cc.ScrollView = null;\r\n\r\n    /**列表项x方向上的间隔 */\r\n    @property({\r\n        type:cc.Integer,\r\n        min:0,\r\n        tooltip:\"列表项x方向上的间隔\"\r\n    })\r\n    spaceX: number = 10;\r\n\r\n    /**列表项y方向上的间隔 */\r\n    @property({\r\n        type:cc.Integer,\r\n        min:0,\r\n        tooltip:\"列表项y方向上的间隔\"\r\n    })\r\n    spaceY: number = 10;\r\n\r\n    /**子项列数(一行上的子项数量) */\r\n    @property({\r\n        type:cc.Integer,\r\n        min:1,\r\n        tooltip:\"子项列数(一行上的子项数量)\"\r\n    })\r\n    columns: number = 1;\r\n\r\n    /**是否开启自适应行数(根据子项总数和子项列数决定显示行数) */\r\n    @property({\r\n        tooltip:\"是否开启自适应行数(根据子项总数和子项列数决定显示行数)\"\r\n    })\r\n    autoRow:boolean = true;\r\n\r\n    /**子项行数(在自适应行数选项为false时生效,否则无效) */\r\n    @property({\r\n        type:cc.Integer,\r\n        min:1,\r\n        tooltip:\"子项行数(在自适应行数选项为false时生效,否则无效)\"\r\n    })\r\n    row:number = 1;\r\n\r\n\r\n    /**列表项实例数量 */\r\n    private spawnCount:number = 0;\r\n     /**距离scrollView中心点的距离，超过这个距离的item会被重置，一般设置为 scrollVIew.height/2 + item.heigt/2 + spaceing，因为这个距离item正好超出scrollView显示范围 */\r\n     private bufferZone:number = 0;\r\n     /**列表项总数 */\r\n    public totalCount:number = 0;\r\n    /**scrollView的内容容器 */\r\n    private content:cc.Node = null;\r\n    /**存放列表项实例的数组 */\r\n    private items:Array<cc.Node> = [];\r\n    /**子项上的ItemReder组件数组 */\r\n    private itemRenderers:Array<ItemRenderer> = [];\r\n    /**刷新列表计时 */\r\n    private updateTimer:number = 0;\r\n    /**刷新列表间隔 */\r\n    private updateInterval:number = 0;\r\n    /**上一次content的Y值，用于和现在content的Y值比较，得出是向上还是向下滚动 */\r\n    private lastContentPosY:number = 0;\r\n    /**上次的列表项数据 */\r\n    private oldDataProvider:any[] = [];\r\n    /**列表项数据 */\r\n    private dataProvider:any[] = [];\r\n    /**item的高度 */\r\n    private itemHeight:number = 0;\r\n    /**item的宽度 */\r\n    private itemWidth:number = 0;\r\n\r\n    /**选中项序号 */\r\n    private _selectedIndex:number = -1;//-1表示未选中任何子项\r\n    /**上次选中的子项序号 */\r\n    private _lastSelectedIndex: number = -1;//\r\n\r\n    @property(sp.Skeleton)\r\n    public weapon: sp.Skeleton = null;\r\n\r\n    onLoad() {\r\n        this.content = this.scrollView.content;\r\n        this.items = [];\r\n        this.itemRenderers = [];\r\n        this.oldDataProvider = [];\r\n        this.dataProvider = [];\r\n        this.updateTimer = 0;\r\n        this.updateInterval = 0.1;\r\n        this.lastContentPosY = 0;\r\n        this._selectedIndex = -1;\r\n        this._lastSelectedIndex = -1;\r\n        this.itemHeight = this.itemPrefab.data.height;\r\n        this.itemWidth = this.itemPrefab.data.width;\r\n        this.content.removeAllChildren();\r\n        this.content.width = this.scrollView.node.width;\r\n\r\n        //计算创建的item实例数量，比当前scrollView容器能放下的item行数再加上2行（1行也行）\r\n        this.spawnCount = (Math.round(this.scrollView.node.height/( this.itemHeight + this.spaceY)) + 2) * this.columns;//虚拟布局\r\n        //计算bufferZone\r\n        this.bufferZone = this.scrollView.node.height/2 +  this.itemHeight/2 + this.spaceY;\r\n        //运行滚动\r\n        this.enabled = true;\r\n        this.scrollView.enabled = true;\r\n    }\r\n\r\n    /**\r\n     * 更新列表数据，并刷新视图\r\n     * @example\r\n     *   setData([{id:1,msg:\"a\"},{id:2,msg:\"b\"}])   ItemRenderer\r\n     * @param itemDataList item数据列表\r\n     */\r\n    public replaceAll(itemDataList:any[]):void {//（如果当前的子项类型(预制体与其上的组件)与之前设置的类型不同，则必须在调用本方法之后调用refresh()方法以更新视图）\r\n        this.oldDataProvider = this.dataProvider;\r\n        //浅拷贝item数据\r\n        this.dataProvider = itemDataList.slice();\r\n        this.totalCount = this.dataProvider.length;\r\n\r\n        this.updateItems();\r\n    }\r\n    /**刷新视图 */\r\n    public refresh():void {//时间有限，本方法待扩展，creator 由于本身组件特性，一般不会动态的更改子项类型\r\n\r\n    }\r\n\r\n    /**更新列表子项*/\r\n    private updateItems():void {\r\n        let rowNum = Math.ceil(this.totalCount / this.columns);\r\n        this.content.height = rowNum * ( this.itemHeight + this.spaceY) + this.spaceY;\r\n        let oldLen = this.oldDataProvider.length;\r\n        //实际创建的item实例数\r\n        let len = this.totalCount;//this.totalCount < this.spawnCount ? this.totalCount : this.spawnCount; //暂时没时间处理虚拟布局，先全部用创建实例\r\n\r\n        for (let i = 0; i < len; i++) {\r\n            if (i >= oldLen) {//需创建新的列表子项\r\n                this.createItem(i);\r\n            }\r\n            else {\r\n                if (this.itemRenderers[i] != null) {\r\n                    this.itemRenderers[i].updateItem(i, this.dataProvider[i], this.weapon);\r\n                }\r\n            }\r\n            this.updateItemSelected(i);\r\n        }\r\n        if (len < oldLen) {//需剔除多余的子项\r\n            for (let i = oldLen-1; i >= 0; i--) {//从后往前遍历\r\n                if (i >= len) {\r\n                    let item = this.items[i];\r\n                    if (item) {\r\n                        item.destroy();\r\n                    }\r\n                    this.items.length -= 1;\r\n                    this.itemRenderers.length -= 1;//不用手动调用ItemRenderer的销毁方法，所属节点销毁时会自动调用组件的销毁方法\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public OnCreateView(itemDataList: any[]): void  {\r\n\r\n        this.oldDataProvider = this.dataProvider;\r\n        //浅拷贝item数据\r\n        this.dataProvider = itemDataList.slice();\r\n        this.totalCount = this.dataProvider.length;\r\n        let rowNum = Math.ceil(this.totalCount / this.columns);\r\n        this.content.height = rowNum * (this.itemHeight + this.spaceY) + this.spaceY;\r\n        let oldLen = this.oldDataProvider.length;\r\n        let len = this.totalCount;\r\n        for (let i = oldLen - 1; i >= 0; i--) {//从后往前遍历\r\n            let item = this.items[i];\r\n            if (item) {\r\n                item.destroy();\r\n            }\r\n        }\r\n        this.items.length = 0\r\n        this.itemRenderers.length = 0\r\n        this.contentNum = 0;\r\n        for (let i = 0; i < len; i++) {\r\n            this.createItem(i);\r\n            this.updateItemSelected(i);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    contentNum: number = 0;\r\n    private createItem(index: number): void {\r\n       \r\n        let i = index;\r\n        if (this.dataProvider[i].bUnlock == false && this.dataProvider[i].costType == 2) {\r\n            this.contentNum = this.contentNum + 1;\r\n            this.items.push(null);\r\n            this.itemRenderers.push(null);\r\n            return\r\n\r\n        }\r\n        let increaseX = this.itemWidth + this.spaceX;//为正\r\n        let initPosX = -(increaseX * this.columns - this.spaceX) / 2 + this.itemWidth / 2;\r\n        let increaseY = -(this.itemHeight + this.spaceY);//为负\r\n        let initPosY = this.content.height/2 - (this.spaceY + this.itemHeight/2);\r\n\r\n        let item = cc.instantiate(this.itemPrefab);\r\n        this.content.addChild(item);\r\n        \r\n        \r\n\r\n        var ind = i - this.contentNum;\r\n\r\n        let rowIndex = Math.floor(ind / this.columns);\r\n        let columnsIndex = ind % this.columns;\r\n        let x = initPosX + columnsIndex * increaseX;\r\n        let y = initPosY + rowIndex * increaseY;\r\n        item.setPosition(x, y);\r\n        let itemRendererComp = item.getComponent(this.itemClassName) as ItemRenderer;\r\n        itemRendererComp.updateItem(i, this.dataProvider[i], this.weapon);\r\n        this.itemRenderers.push(itemRendererComp);\r\n        this.items.push(item);\r\n    }\r\n\r\n    private updateItemSelected(index: number): void {\r\n        if (this.itemRenderers[index] == null) {\r\n            return;\r\n        }\r\n        if (this._selectedIndex == index) {\r\n            this.itemRenderers[index].selected = true;\r\n        }\r\n        else if (this._lastSelectedIndex == index) {\r\n            this.itemRenderers[index].selected = false;\r\n        }\r\n    }\r\n\r\n    /**清理item实例 */\r\n    private clearAllItem():void {\r\n        let len = this.items.length;\r\n        for (let i = 0; i < len; i++) {\r\n            let item = this.items[i];\r\n            item.destroy();\r\n        }\r\n        this.items.length = 0;\r\n    }\r\n\r\n    /**滚动到顶部 */\r\n    public scrollToTop():void {\r\n        this.scrollView.scrollToTop();\r\n    }\r\n\r\n    /**设置选中项序号 */\r\n    public set selectedIndex(index:number) {\r\n        this._lastSelectedIndex = this._selectedIndex;\r\n        this._selectedIndex = index;\r\n    }\r\n\r\n    public get selectedIndex() {\r\n        let len = this.items.length;\r\n        if (this._selectedIndex >= 0 && this._selectedIndex <len) {\r\n            return this._selectedIndex;\r\n        }\r\n        else {\r\n            return -1;\r\n        }\r\n    }\r\n\r\n    /**设置选中项 */\r\n    public set selectedItem(target:cc.Node) {\r\n        this._lastSelectedIndex = this._selectedIndex;\r\n        let index = this.items.indexOf(target);\r\n        if (index != -1) {\r\n            this._selectedIndex = index;\r\n        }\r\n        else {\r\n            this._selectedIndex = -1;\r\n        }\r\n    }\r\n\r\n    /**获取item在scrollView的局部坐标 */\r\n    private getPositionInView(item:cc.Node):cc.Vec3 {\r\n        let worldPos = item.parent.convertToWorldSpaceAR(item.position);\r\n        let viewPos = this.scrollView.node.convertToNodeSpaceAR(worldPos);\r\n        return viewPos;\r\n    }\r\n\r\n    // update(dt):void {\r\n    //     this.updateTimer += dt;\r\n    //     if (this.updateTimer < this.updateInterval) return;\r\n    //     this.updateTimer = 0;\r\n    //     let items = this.items;\r\n    //     let buffer = this.bufferZone;\r\n    //     let isDown = this.scrollView.content.y < this.lastContentPosY;\r\n    //     let offset = (this.itemHeight + this.spaceY) * items.length;\r\n    //     for (let i = 0; i < items.length; i++) {\r\n    //         let viewPos = this.getPositionInView(items[i]);\r\n    //         if (isDown) {\r\n    //             if (viewPos.y < -buffer && items[i].y + offset < 0) {\r\n    //                 items[i].y = items[i].y + offset;\r\n    //                 let item = items[i].getComponent(this.itemClassName);\r\n    //                 let itemId = item.ItemID - items.length;\r\n    //                 item.updateItem(itemId, this.itemDataList[itemId]);\r\n    //             }\r\n    //         }\r\n    //         else {\r\n    //             if (viewPos.y > buffer && items[i].y - offset > -this.content.height) {\r\n    //                 items[i].y = items[i].y - offset;\r\n    //                 let item = items[i].getComponent(this.itemClassName);\r\n    //                 let itemId = item.itemID + items.length;\r\n    //                 item.updateItem(itemId, this.itemDataList[itemId]);\r\n    //             }\r\n    //         }\r\n    //     }\r\n    //     this.lastContentPosY = this.scrollView.content.y;\r\n    // }\r\n\r\n    /**\r\n     * 滚动到指定位置\r\n     * @param vec2 位置\r\n     */\r\n     public scrollToFixedPosition (vec2:cc.Vec2) {\r\n        this.scrollView.scrollToOffset(vec2, 2);\r\n    }\r\n\r\n}\r\n"]}