{"version":3,"sources":["assets\\script\\gameScence\\BossBase.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nconst { ccclass, property } = cc._decorator;\r\nimport SpineManager from \"../manager/SpineManager\";\r\n\r\n@ccclass\r\nexport default class BossBase extends cc.Component {\r\n\r\n\r\n    @property(cc.Label)\r\n    hpLable: cc.Label = null;//Ѫ��\r\n\r\n    private m_ani: sp.Skeleton = null;\r\n    public isDeath: boolean = false;\r\n\r\n    private hp = 0;\r\n    private maxHp = 0;\r\n\r\n    public Init(data) {\r\n        this.m_ani = this.node.getChildByName(\"p\").getComponent(sp.Skeleton);\r\n        SpineManager.getInstance().playSpinAnimation(this.m_ani, \"daiji\", true);\r\n        if (data.hp) {\r\n            this.hpLable.string = data.hp + \"\";\r\n            this.hp = Number(data.hp);\r\n            this.maxHp = this.hp;\r\n        }\r\n    }\r\n\r\n    public Attack() {\r\n        SpineManager.getInstance().playSpinAnimation(this.m_ani, \"gongji\", true);\r\n    }\r\n\r\n    public Death(cb?: Function) {\r\n        this.isDeath = true;\r\n        SpineManager.getInstance().playSpinAnimation(this.m_ani, \"siwang\", false, () => {\r\n            if (cb) {\r\n                cb();\r\n                cb = null;\r\n            }\r\n            this.node.destroy();\r\n        });\r\n    }\r\n\r\n    public SetScale(scale: number, cb?: Function, isAni: boolean = false) {\r\n        if (isAni) {\r\n            var sp = cc.sequence(cc.scaleTo(1, scale, scale), cc.callFunc(() => {\r\n                if (cb) {\r\n                    cb();\r\n                    cb = null;\r\n                }\r\n            }))\r\n            this.node.runAction(sp);\r\n        }\r\n        else {\r\n            this.node.setScale(scale, scale);\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * ��ȡ��ǰѪ��\r\n     * @returns \r\n     */\r\n    public getHp() {\r\n        return this.hp;\r\n    }\r\n\r\n    /**\r\n     * Ѫ���Ա�\r\n     * @param targerHp \r\n     * @returns \r\n     */\r\n    public compareHp(targerHp) {\r\n        return this.hp - targerHp > 0;\r\n    }\r\n\r\n\r\n    /**\r\n     * ���Ѫ��\r\n     * @returns \r\n     */\r\n    public getMaxHp() {\r\n        return this.maxHp;\r\n    }\r\n\r\n\r\n    /**\r\n     * ����Ѫ��\r\n     * @param targerHp \r\n     * @param cb \r\n     * @param isPets \r\n     * @returns \r\n     */\r\n    public subHp(targerHp, cb?, isPets: boolean = false) {      \r\n        //����Ѫ��\r\n        this.hp -= targerHp;\r\n        this.hpLable.string = this.hp.toString();\r\n        if (this.hp <= 0) {\r\n            this.hp = 0;\r\n            this.hpLable.node.active = false;         \r\n            return;\r\n        }      \r\n    }\r\n\r\n    public idle() {\r\n        let ainName = \"daiji\";\r\n        SpineManager.getInstance().playSpinAnimation(this.m_ani, ainName, true, null, this);\r\n    }\r\n\r\n    public win(cb?: Function) {\r\n        SpineManager.getInstance().playSpinAnimation(this.m_ani, \"shengli\", true, () => {\r\n            if (cb) {\r\n                cb();\r\n                cb = null;\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n}\r\n"]}