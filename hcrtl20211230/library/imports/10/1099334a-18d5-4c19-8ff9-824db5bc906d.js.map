{"version":3,"sources":["assets\\script\\manager\\SpineManager.ts"],"names":[],"mappings":";;;;;AAAA,oBAAoB;AACpB,wEAAwE;AACxE,mBAAmB;AACnB,kFAAkF;AAClF,8BAA8B;AAC9B,kFAAkF;;;;;;;;;;;;;;;;;;;;;AAElF,yDAAoD;AAE9C,IAAA,kBAAmC,EAAlC,oBAAO,EAAE,sBAAyB,CAAC;AAG1C;IAA0C,gCAAiB;IAA3D;;IAyCA,CAAC;IAxCA;;;;;UAKM;IACE,wCAAiB,GAAxB,UAAyB,YAAyB,EAAE,aAAqB,EAAE,MAAe,EAAE,gBAAqB,EAAE,IAAgB,EAAE,SAAqB;QAAvC,qBAAA,EAAA,WAAgB;QAAE,0BAAA,EAAA,aAAqB;QACxJ,2EAA2E;QAC3E,YAAY,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;QACpC,YAAY,CAAC,IAAI,GAAG,MAAM,CAAC;QAC3B,YAAY,CAAC,SAAS,GAAG,SAAS,CAAC;QACnC,YAAY,CAAC,SAAS,GAAG,aAAa,CAAC;QACvC,qDAAqD;QACrD,YAAY,CAAC,mBAAmB,CAAC,gBAAgB,CAAC,CAAC;QACnD,iEAAiE;IACrE,CAAC;IAEM,gCAAS,GAAhB,UAAiB,YAAyB,EAAE,IAAY,EAAE,MAAe,EAAE,QAAgB,EAAE,aAAqB,EAAE,gBAAgC;QAAhC,iCAAA,EAAA,uBAAgC;QAChJ,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,YAAY,EAAE,UAAC,GAAG,EAAE,MAAM;YACjD,IAAI,GAAG,EAAE;gBACL,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,GAAG,CAAC,CAAA;gBAC7B,OAAM;aACT;YACD,YAAY,CAAC,YAAY,GAAG,MAAM,CAAC;YACnC,YAAY,CAAC,WAAW,GAAG,QAAQ,CAAC;YACpC,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;YAC/B,YAAY,CAAC,IAAI,GAAG,MAAM,CAAC;YAC3B,YAAY,CAAC,SAAS,GAAG,aAAa,CAAC;YACvC,OAAO,CAAC,GAAG,CAAC,uBAAuB,EAAE,QAAQ,CAAC,CAAA;YAC9C,IAAI,gBAAgB,IAAI,IAAI,EAAE;gBAC1B,gBAAgB,EAAE,CAAC;aACtB;YACD,kCAAkC;QACtC,CAAC,CAAC,CAAA;IACN,CAAC;IAGM,uCAAgB,GAAvB,UAAwB,YAAyB;QAC7C,OAAO,YAAY,CAAC,SAAS,CAAC;IAClC,CAAC;IAxCoB,YAAY;QADhC,OAAO;OACa,YAAY,CAyChC;IAAD,mBAAC;CAzCD,AAyCC,CAzCyC,2BAAiB,GAyC1D;kBAzCoB,YAAY","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\n\nimport BaseInstanceClass from \"./BaseInstanceClass\";\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class SpineManager extends BaseInstanceClass {\n /**\n     * 播放spin动画\n     * @param animationName 动画名称\n     * @param completeCallback 播放回调\n     * @param isLoop 是否循环\n     */\n  public playSpinAnimation(spinSkeleton: sp.Skeleton, animationName: string, isLoop: boolean, completeCallback: any, self: any = null, timeScale: number = 1) {\n    // console.log('播放动画', animationName, 'spinSkeleton', spinSkeleton, isLoop)\n    spinSkeleton.setStartListener(null);\n    spinSkeleton.loop = isLoop;\n    spinSkeleton.timeScale = timeScale;\n    spinSkeleton.animation = animationName;\n    // spinSkeleton.setAnimation(0,animationName,isLoop);\n    spinSkeleton.setCompleteListener(completeCallback);\n    // (completeCallback) ? : spinSkeleton.setCompleteListener(null);\n}\n\npublic loadSpine(spinSkeleton: sp.Skeleton, path: string, isLoop: boolean, skinName: string, animationName: string, completeCallback:Function = null) {\n    cc.loader.loadRes(path, sp.SkeletonData, (err, spData) => {\n        if (err) {\n            console.log(\"LoadSpin \", err)\n            return\n        }\n        spinSkeleton.skeletonData = spData;\n        spinSkeleton.defaultSkin = skinName;\n        spinSkeleton.setSkin(skinName);\n        spinSkeleton.loop = isLoop;\n        spinSkeleton.animation = animationName;\n        console.log('LoadSpin:****skinName', skinName)\n        if (completeCallback != null) {\n            completeCallback();\n        }\n        // spinSkeleton.setSkin(skinName);\n    })\n}\n\n\npublic getAnimationName(spinSkeleton: sp.Skeleton): string {\n    return spinSkeleton.animation;\n}\n}\n"]}